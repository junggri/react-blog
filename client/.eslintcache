[{"/Users/junggri/Desktop/react-blog/client/src/index.tsx":"1","/Users/junggri/Desktop/react-blog/client/src/reportWebVitals.ts":"2","/Users/junggri/Desktop/react-blog/client/src/serviceWorkerRegistration.ts":"3","/Users/junggri/Desktop/react-blog/client/src/lib/store.ts":"4","/Users/junggri/Desktop/react-blog/client/src/shared/App.tsx":"5","/Users/junggri/Desktop/react-blog/client/src/middleWare/TokenMiddleWare.ts":"6","/Users/junggri/Desktop/react-blog/client/src/pages/Admin.tsx":"7","/Users/junggri/Desktop/react-blog/client/src/useHooks/UseMeta.tsx":"8","/Users/junggri/Desktop/react-blog/client/src/lib/axios.ts":"9","/Users/junggri/Desktop/react-blog/client/src/pages/index.tsx":"10","/Users/junggri/Desktop/react-blog/client/src/modules/index.ts":"11","/Users/junggri/Desktop/react-blog/client/src/styled-comp.tsx":"12","/Users/junggri/Desktop/react-blog/client/src/useHooks/useCSRF.tsx":"13","/Users/junggri/Desktop/react-blog/client/src/config/axois.config.ts":"14","/Users/junggri/Desktop/react-blog/client/src/styles/Media.ts":"15","/Users/junggri/Desktop/react-blog/client/src/pages/TextEditor.tsx":"16","/Users/junggri/Desktop/react-blog/client/src/pages/Posts.tsx":"17","/Users/junggri/Desktop/react-blog/client/src/pages/Entry.tsx":"18","/Users/junggri/Desktop/react-blog/client/src/modules/Posts/index.ts":"19","/Users/junggri/Desktop/react-blog/client/src/modules/Topic/index.ts":"20","/Users/junggri/Desktop/react-blog/client/src/modules/Common/index.ts":"21","/Users/junggri/Desktop/react-blog/client/src/modules/TextEditor/index.ts":"22","/Users/junggri/Desktop/react-blog/client/src/modules/Comment/index.ts":"23","/Users/junggri/Desktop/react-blog/client/src/useHooks/useCommon.tsx":"24","/Users/junggri/Desktop/react-blog/client/src/styles/snow.tsx":"25","/Users/junggri/Desktop/react-blog/client/src/useHooks/usePosts.tsx":"26","/Users/junggri/Desktop/react-blog/client/src/useHooks/useLoginFlag.tsx":"27","/Users/junggri/Desktop/react-blog/client/src/modules/Posts/lib/PostsUtil.ts":"28","/Users/junggri/Desktop/react-blog/client/src/component/index.tsx":"29","/Users/junggri/Desktop/react-blog/client/src/modules/Posts/lib/PostsAction.ts":"30","/Users/junggri/Desktop/react-blog/client/src/lib/checkUserState.ts":"31","/Users/junggri/Desktop/react-blog/client/src/lib/PreloadContext.tsx":"32","/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/Editor.tsx":"33","/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/TextEditBtnBox.tsx":"34","/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/CreateNewTopic.tsx":"35","/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/SelectKindOfPosts.tsx":"36","/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/StoragePost.tsx":"37","/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/Thumbnail.tsx":"38","/Users/junggri/Desktop/react-blog/client/src/component/Content/PostsContainer.tsx":"39","/Users/junggri/Desktop/react-blog/client/src/component/Content/Comment.tsx":"40","/Users/junggri/Desktop/react-blog/client/src/component/Content/CommentItems.tsx":"41","/Users/junggri/Desktop/react-blog/client/src/component/Content/EntryPostsContainer.tsx":"42","/Users/junggri/Desktop/react-blog/client/src/component/Content/SpecificTopicContainer.tsx":"43","/Users/junggri/Desktop/react-blog/client/src/component/Content/TagsContainer.tsx":"44","/Users/junggri/Desktop/react-blog/client/src/component/Home/TopMetaBar.tsx":"45","/Users/junggri/Desktop/react-blog/client/src/component/Home/SideNavBar.tsx":"46","/Users/junggri/Desktop/react-blog/client/src/component/Home/SideNavBarTopic.tsx":"47","/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/WriteTopicName.tsx":"48","/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/PostsDetail.tsx":"49","/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/SelectTopic.tsx":"50","/Users/junggri/Desktop/react-blog/client/src/component/About/AboutContainer.tsx":"51","/Users/junggri/Desktop/react-blog/client/src/config/textEditor.config.ts":"52","/Users/junggri/Desktop/react-blog/client/src/lib/isNewPost.ts":"53","/Users/junggri/Desktop/react-blog/client/src/useHooks/useTopic.tsx":"54","/Users/junggri/Desktop/react-blog/client/src/useHooks/useTextEdit.tsx":"55","/Users/junggri/Desktop/react-blog/client/src/useHooks/useComment.tsx":"56","/Users/junggri/Desktop/react-blog/client/src/styles/GlobalStyles.tsx":"57"},{"size":1490,"mtime":1613662336000,"results":"58","hashOfConfig":"59"},{"size":426,"mtime":1613662336000,"results":"60","hashOfConfig":"59"},{"size":5256,"mtime":1613662336000,"results":"61","hashOfConfig":"59"},{"size":646,"mtime":1613662336000,"results":"62","hashOfConfig":"59"},{"size":966,"mtime":1613662336000,"results":"63","hashOfConfig":"59"},{"size":126,"mtime":1613662336000,"results":"64","hashOfConfig":"59"},{"size":2067,"mtime":1613662336000,"results":"65","hashOfConfig":"59"},{"size":2358,"mtime":1613662336000,"results":"66","hashOfConfig":"59"},{"size":5451,"mtime":1613662336000,"results":"67","hashOfConfig":"59"},{"size":316,"mtime":1613662336000,"results":"68","hashOfConfig":"59"},{"size":367,"mtime":1613662336000,"results":"69","hashOfConfig":"59"},{"size":23608,"mtime":1613662336000,"results":"70","hashOfConfig":"59"},{"size":399,"mtime":1613662336000,"results":"71","hashOfConfig":"59"},{"size":477,"mtime":1613662336000,"results":"72","hashOfConfig":"59"},{"size":483,"mtime":1613662336000,"results":"73","hashOfConfig":"59"},{"size":302,"mtime":1613662336000,"results":"74","hashOfConfig":"59"},{"size":176,"mtime":1613662336000,"results":"75","hashOfConfig":"59"},{"size":2618,"mtime":1613662336000,"results":"76","hashOfConfig":"59"},{"size":2523,"mtime":1613662336000,"results":"77","hashOfConfig":"59"},{"size":1355,"mtime":1613662336000,"results":"78","hashOfConfig":"59"},{"size":2106,"mtime":1613662336000,"results":"79","hashOfConfig":"59"},{"size":2886,"mtime":1613662336000,"results":"80","hashOfConfig":"59"},{"size":1492,"mtime":1613662336000,"results":"81","hashOfConfig":"59"},{"size":1056,"mtime":1613662336000,"results":"82","hashOfConfig":"59"},{"size":25702,"mtime":1613662336000,"results":"83","hashOfConfig":"59"},{"size":1277,"mtime":1613662336000,"results":"84","hashOfConfig":"59"},{"size":401,"mtime":1613662336000,"results":"85","hashOfConfig":"59"},{"size":2075,"mtime":1613662336000,"results":"86","hashOfConfig":"59"},{"size":1396,"mtime":1613662336000,"results":"87","hashOfConfig":"59"},{"size":1194,"mtime":1613662336000,"results":"88","hashOfConfig":"59"},{"size":320,"mtime":1613662336000,"results":"89","hashOfConfig":"59"},{"size":724,"mtime":1613662336000,"results":"90","hashOfConfig":"59"},{"size":6620,"mtime":1613662336000,"results":"91","hashOfConfig":"59"},{"size":505,"mtime":1613662336000,"results":"92","hashOfConfig":"59"},{"size":2334,"mtime":1613662336000,"results":"93","hashOfConfig":"59"},{"size":1167,"mtime":1613662336000,"results":"94","hashOfConfig":"59"},{"size":1176,"mtime":1613662336000,"results":"95","hashOfConfig":"59"},{"size":1060,"mtime":1613662336000,"results":"96","hashOfConfig":"59"},{"size":2950,"mtime":1613662336000,"results":"97","hashOfConfig":"59"},{"size":3334,"mtime":1613662336000,"results":"98","hashOfConfig":"59"},{"size":8468,"mtime":1613662336000,"results":"99","hashOfConfig":"59"},{"size":2371,"mtime":1613662336000,"results":"100","hashOfConfig":"59"},{"size":2832,"mtime":1613662336000,"results":"101","hashOfConfig":"59"},{"size":1331,"mtime":1613662336000,"results":"102","hashOfConfig":"59"},{"size":2254,"mtime":1613662336000,"results":"103","hashOfConfig":"59"},{"size":1959,"mtime":1613662336000,"results":"104","hashOfConfig":"59"},{"size":1213,"mtime":1613662336000,"results":"105","hashOfConfig":"59"},{"size":404,"mtime":1613662336000,"results":"106","hashOfConfig":"59"},{"size":579,"mtime":1613662336000,"results":"107","hashOfConfig":"59"},{"size":1184,"mtime":1613662336000,"results":"108","hashOfConfig":"59"},{"size":6111,"mtime":1613662336000,"results":"109","hashOfConfig":"59"},{"size":1290,"mtime":1613662336000,"results":"110","hashOfConfig":"59"},{"size":175,"mtime":1613662336000,"results":"111","hashOfConfig":"59"},{"size":496,"mtime":1613662336000,"results":"112","hashOfConfig":"59"},{"size":1472,"mtime":1613662336000,"results":"113","hashOfConfig":"59"},{"size":500,"mtime":1613662336000,"results":"114","hashOfConfig":"59"},{"size":3661,"mtime":1613662336000,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sf4hvd",{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"121"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"121"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"121"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"121"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"121"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"121"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"121"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"121"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"121"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"121"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"121"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"121"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"121"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"121"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"121"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"121"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"121"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"121"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"121"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"121"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"121"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"121"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"121"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"121"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"121"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"121"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"121"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"121"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"121"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"121"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"121"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"121"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"121"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"121"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"121"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"121"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"121"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"121"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"269"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/junggri/Desktop/react-blog/client/src/index.tsx",[],"/Users/junggri/Desktop/react-blog/client/src/reportWebVitals.ts",["272"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n",[],"/Users/junggri/Desktop/react-blog/client/src/serviceWorkerRegistration.ts",["273","274"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/Users/junggri/Desktop/react-blog/client/src/lib/store.ts",["275"],"import { applyMiddleware, createStore } from \"redux\";\nimport rootReducer from \"../modules\";\nimport Thunk from \"redux-thunk\";\nimport TokenMiddleWare from \"../middleWare/TokenMiddleWare\";\nimport { composeWithDevTools } from \"redux-devtools-extension/logOnlyInProduction\";\n\n\nconst middleWares = [Thunk, TokenMiddleWare];\n\nconst devTools =\n   process.env.NODE_ENV === \"production\"\n      ? applyMiddleware(...middleWares)\n      : composeWithDevTools(applyMiddleware(...middleWares));\n\n\nexport const store = typeof window === \"object\"\n   ? createStore(rootReducer, (window as any).__PRELOADED_STATE__, devTools)\n   : createStore(rootReducer, devTools);","/Users/junggri/Desktop/react-blog/client/src/shared/App.tsx",["276"],"/Users/junggri/Desktop/react-blog/client/src/middleWare/TokenMiddleWare.ts",["277","278","279","280","281","282","283","284"],"const TokenMiddleWare = (store: any) => (next: any) => (action: any) => {\n   next(action);\n};\n\nexport default TokenMiddleWare;","/Users/junggri/Desktop/react-blog/client/src/pages/Admin.tsx",["285","286","287"],"import React, { useRef, useState } from \"react\";\nimport { AdminLoginBoxComp } from \"../styled-comp\";\nimport util from \"../lib/axios\";\nimport useCSRF from \"../useHooks/useCSRF\";\n\nfunction Admin({ history }: any) {\n   const [user, setUser] = useState({\n      id: \"\",\n      pwd: \"\",\n      number: \"\",\n   });\n\n   const [visivle, setVisible] = useState<boolean>(false);\n   const [number, setNumber] = useState<number>(0);\n   const [certification, setCertification] = useState<boolean>(false);\n   const _certifi_num = useRef<HTMLInputElement>(null);\n\n   const csrf = useCSRF();\n\n   const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setUser(state => ({\n         ...state,\n         [e.target.name]: e.target.value,\n      }));\n   };\n\n   const onSubmit = async () => {\n      setVisible(true);\n      const { data } = await util.adminLogin(user, csrf);\n      setCertification(true);\n      setNumber(data.number);\n      if (_certifi_num.current !== null) {\n         _certifi_num.current.focus();\n      }\n   };\n\n   const onCertificationPhone = async () => {\n      if (parseInt(user.number, 10) === number && certification) {\n         const { data } = await util.setJwtToken(csrf);\n         localStorage.setItem(\"_jt\", data.token);\n         history.push(\"/\");\n      }\n   };\n\n\n   return (\n      <AdminLoginBoxComp>\n         <div className=\"login-inputbox\">\n            <input type=\"text\" name=\"id\" value={user.id} placeholder=\"아이디\" onChange={onChange} />\n            <input type=\"password\" name=\"pwd\" value={user.pwd} placeholder=\"비밀번호\" onChange={onChange} />\n         </div>\n         {visivle &&\n         <div className=\"certification-numberBox\">\n            <input type=\"text\" value={user.number} name=\"number\" onChange={onChange} ref={_certifi_num} />\n            <button onClick={onCertificationPhone}>\n               확인하기\n            </button>\n         </div>\n         }\n         <button className=\"login-btn\" onClick={onSubmit}>\n            인증시작하기\n         </button>\n      </AdminLoginBoxComp>\n   );\n}\n\nexport default Admin;","/Users/junggri/Desktop/react-blog/client/src/useHooks/UseMeta.tsx",["288","289","290","291","292"],"/Users/junggri/Desktop/react-blog/client/src/lib/axios.ts",["293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321"],"/Users/junggri/Desktop/react-blog/client/src/pages/index.tsx",[],"/Users/junggri/Desktop/react-blog/client/src/modules/index.ts",[],"/Users/junggri/Desktop/react-blog/client/src/styled-comp.tsx",["322","323","324","325","326","327","328","329","330"],"import styled, { css, keyframes } from \"styled-components\";\nimport { darken, lighten } from \"polished\";\nimport React, { memo } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { media } from \"./styles/Media\";\n\nexport interface Width {\n   width: number;\n}\n\nexport interface topView {\n   width: number;\n   logo: any\n   ref: any\n}\n\nexport interface contentBox {\n   ref: any;\n}\n\ninterface IDeleteTopicIconComp {\n   onClick: any\n}\n\ninterface ICommentItems {\n   depth: number\n}\n\n//INTERFACE\n//위의 인터페이스는 컴포넌트가 가지는 PROPS의 인터ㅔ이스\n\nconst leftWidth = 330;\nconst tabletLeftWidth = 200;\nconst _width = typeof window === \"object\" ? window.screen.width * 0.57 : 1000;\n\ninterface IEntryContainerComp {\n   width: number\n}\n\nconst rotate = keyframes`\n  100%{\n    transform: rotate(360deg);\n  }\n`;\n\nconst mediaMixin = css`\n  @media(max-width:369px){\n    width:92%;\n  }\n  @media(min-width:369px){\n    width:92%;\n  }\n  @media(min-width:768px){\n    width:92%;\n  }\n  @media(min-width:1024px){\n    width:92%\n  }\n  @media(min-width:1025px){\n    width:1025px\n  }\n`;\n\nconst postMediaMixin = css`\n  @media(max-width:369px){\n    width:92%;\n  }\n  @media(min-width:369px){\n    width:92%;\n  }\n  @media(min-width:768px){\n    width:92%;\n  }\n  @media(min-width:1024px){\n    width:92%\n  }\n  @media(min-width:1025px){\n    width:800px;\n  }\n`;\n\nconst postsContainerMixin = css`\n  ${media.mobile`\n   position:relative;\n   padding-left:10px;\n   padding-rigth:10px;\n  `};\n  ${media.tablet`\n   padding-left:180px;\n  `}\n  ${media.bigMoblie`\n    padding-left:180px;\n  `}\n  ${media.mobile`\n    padding-left:0px;\n  `};\n  margin-top:50px;\n  padding-left:${leftWidth + \"px\"}; \n  width:100%;\n  position: absolute;\n  top:0;\n  & .content-cmt-box{\n    display: flex;\n    opacity: 0.6;\n    margin-top:20px;\n    font-size:1.12rem;\n    ${media.mobile`\n      font-size:0.9rem;\n      margin-top:10px;\n    `};\n    & .content-cmt-icons{\n      margin-right: 4px;\n    }\n  }\n  & .sidebar-copyright{\n   text-align: right;\n   letter-spacing: 1.1px;\n   font-size:12px;\n   margin-top:80px;\n   margin-bottom: 20px;\n  }\n`;\n\nexport const EntryContainerComp = styled.div`\n  position:relative;\n  margin:0 auto;\n  width:${_width + \"px\"};\n  ${mediaMixin}\n`;\n\nconst postsItemMixin = css`  \n  position:relative;\n  margin-bottom:60px;\n  word-break:break-all;\n  & .item-created{  \n    display: inline-block;\n    font-size:1rem;\n    font-weight: 600;\n    opacity: 0.8;\n    ${media.tablet`font-size:0.8rem`};\n    & .ic-icons{\n      margin-right:4px;\n      display:inline-block;\n    }\n    & .topic_link{\n      margin-left:6px;\n      color:#3ab09e;\n    }\n    & .post_is_new{\n      display: inline-block; \n      font-weight: 600;\n      margin-left:6px;\n      color: #ff6666;\n    }\n  }\n  & .item-contentName{\n    overflow-wrap: break-word;\n    font-size:2rem;\n    line-height: 2.5rem;\n    margin-top:6px;\n    letter-spacing: 2px;\n    font-weight: 450;\n    ${media.tablet`margin-top:-4px`};\n    ${media.mobile`margin-top:-8px`};\n    & span{\n    ${media.tablet`\n      font-size:2rem;\n    `};\n    ${media.mobile`\n       font-size:1.4rem;    \n    `};\n      &:hover{\n        text-decoration:none; \n        border-bottom:1px solid black;\n         padding-bottom:1.4px\n      }\n    }\n    //white-space:nowrap;\n    //overflow: hidden;\n    //text-overflow: ellipsis;\n    //위에는 ...표시하는 방법\n    padding:6px 0;\n  }\n  & .item-detail{\n    font-size:1.2rem;\n    margin-top:14px;\n    font-weight: 400;\n    white-space:nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    ${media.tablet`font-size:0.9rem`}\n    ${media.tablet`\n      font-size:0.9rem;\n      margin-top:4px;\n    `}\n  }\n  & .posts-admin-box{\n    position: absolute;\n    right:0;\n    bottom:0;\n    z-index: 9;\n    span{\n      vertical-align: middle;\n      font-size:1.6rem;\n      opacity: 0.6;\n      margin-left:12px;\n      transition: 0.3s all;\n    }\n    span:hover{\n      opacity: 1;\n      cursor: pointer;\n    }   \n  }\n \n`;\n\n\nexport const TopMetaBarComp = styled.section`\n  position: fixed;\n  top:0;\n  width:${_width + \"px\"};\n  z-index: 999;\n  height: 62px;\n  background:white;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  ${media.tablet`\n   width:95%;\n  `};\n  ${media.desktop`\n   width:95%;\n  `};\n  & .topmetabar-list{\n    display: flex;\n    & .metaItem{  \n      padding:5px 2px;\n      margin-right: 40px;\n      font-size:1.5rem;\n      opacity: 0.6;\n      font-weight: 500;\n      letter-spacing: 1.4px;      \n      ${media.tablet`\n        font-size:1.2rem;\n      `};\n      ${media.small`\n        font-size:0.8rem;\n      `}\n      & .tmb-icon{\n        font-size: 1.3rem;\n        ${media.mobile`\n         display:none;\n        `};\n        ${media.small`\n         display:none;\n        `}\n      }\n     &:hover{\n      opacity: 1;       \n     }\n    }\n    & .metaActive{\n      opacity: 1;\n      border-bottom:2.5px solid black;  \n      ${media.small`\n        border-bottom:1.5px solid black;\n      `}    \n    }\n  }\n  & .topmetabar-count{\n    ${media.desktop`\n     right:5%;\n    `};\n    ${media.mobile`\n      display:none;\n    `};\n    height: 100%;\n    display: flex;\n    align-items: center;\n    & div {\n      margin-left:12px;\n      font-weight: 100;\n      font-size:12px;\n      display: flex;\n      align-items: center;\n       & .topmetabar-countAll,.topmetabar-today{\n         margin-left:6px;\n         display: flex;\n       }\n       & .count-loading-icon{\n         animation: ${rotate} infinite linear 5s;\n      }\n    }\n  }\n`;\n\nexport const SideBarComp = styled.section`\n  display: inline-block;\n  width: ${leftWidth + \"px\"};\n  position : fixed;\n  z-index: 9;\n  margin-top:50px;\n  & .sidebar-item-list{\n    font-weight: 300;\n    margin-top: 40px;\n    & li{\n      font-size:1.125rem;\n      padding:13px 0px;\n      display: flex;\n      align-items: center;\n      &:hover{\n        text-decoration: underline;\n        text-underline-position: under;\n      }\n      ${media.mobile`\n        margin-bottom:14px;\n     `};\n    }\n    & .active{\n      color:#3ab09e;\n    }\n  }\n  & .write-article-btn {\n    border: 1px solid rgba(0, 0, 0, 0.2);\n    display: inline-block;\n    padding: 7px 20px;\n    border-radius: 10px;\n    font-size: 14px;\n    font-weight: 100;\n    transition: all 0.2s;\n    margin-top:20px;\n   }\n  & .write-article-btn:hover {\n    cursor: pointer;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\n  }\n  & .ga-count{\n    ${media.mobile`\n      margin-top:30px;\n    `};\n    display: flex;\n    flex-direction: column;\n    margin-top:62px;\n    padding:4px;\n    font-size:0.9rem; \n    span{\n      margin-right:10px;\n    }\n    div{\n      font-weight: 300;\n      display: flex;\n      margin-right:6px;\n      align-items: center;    \n      margin-bottom:7px;  \n      & .count-num{\n        font-weight:100;\n      }\n    }\n    & .loading-icon{\n      animation: ${rotate} infinite linear 3s;\n      font-size:0.8rem;\n      margin-right:10px;\n    }\n  }\n  ${media.tablet`\n   width:180px;\n  `}\n  ${media.bigMoblie`\n   width:180px;\n  `};\n  ${media.mobile`\n   position:relative;\n   width:100%;\n  `};\n`;\n\nexport const SideBarThunmbNailComp = styled.img`\n  border:1px solid rgba(0,0,0,0.06);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\n  position: relative;\n  width:96px;\n  height: 96px;\n  border-radius: 5px;\n  ${media.mobile`\n   display:none;\n  `};\n`;\n\nexport const SideBarMetaDataComp = styled.div`\n  margin-top:34px;\n  & .sidebar-names{\n    font-size:1.4em;\n    letter-spacing: 0.8px;\n    font-weight: 500;\n  }\n  & .sidebar-posi{\n    font-size:1.1rem;\n    font-weight: 300;\n    margin-top:24px;\n    opacity: 0.7;\n  }\n  ${media.mobile`\n   margin-top:0px;\n  `};\n`;\n\nexport const SideBarPostsContainerComp = (styled.ul`\n  margin-top:70px;\n  & .sidebar-list{\n    font-size:1.1rem;\n    margin-bottom:15px;\n    padding-bottom:10px;\n    border-bottom: 1px solid black;\n    letter-spacing: 1.2px;\n    font-weight: 500;\n  }\n`);\n\nexport const SideBarPostsItemComp = styled(NavLink)<any>`\n  height: 16px;\n  display:block;\n  margin-bottom:6px;\n  transition: all 0.6s;\n  vertical-align: middle;\n  & div{\n    vertical-align: middle;\n    font-size:1.1rem;\n    font-weight: 300;\n    opacity:1;\n    display: flex;\n    & .topic_list_items:hover{\n      text-decoration: underline;\n    }\n  }\n  & .topic_length{\n    display: inline-block;\n    font-size:1rem;\n    margin-left:5px;\n  }\n  & .topic_is_new{\n    color: #ff6666;\n    font-size:11px;\n    display: inline-block;\n    margin-left: 10px;\n    margin-top:1px;\n    z-index: 9;\n    &:hover{\n      font-weight: 600;\n    }\n  }\n  &[aria-current] {\n    color: black;\n    & .topic_list_items{\n      opacity: 1;\n      font-weight: 500;\n      color:#3a7dff\n    }\n  }\n\n`;\n\nexport const EntryPostsContainerComp = styled.div`\n  ${postsContainerMixin}\n`;\n\nexport const SpecificTopicContainerComp = styled.div`\n  ${postsContainerMixin};\n`;\n\nexport const EntryPostsItemComp = styled.div`\n  ${postsItemMixin}'\n`;\n\nexport const SpecificTopicItemsComp = styled.div`\n  ${postsItemMixin}'\n`;\n\nexport const PostsContainerComp = styled.section`\n  width: ${_width * 0.8 + \"px\"};\n  ${postMediaMixin};\n  position: relative;\n  margin: 0 auto;\n  padding-bottom: 30px;\n  background: white;\n  tab-size: 1;\n  & .posts-container-iconbox{\n    padding:20px 20px;\n    font-size:1.5rem;\n  }\n  & img{\n    height:auto;\n    width:auto;\n    max-height: 700px;\n    position: relative;\n    margin :0 auto;\n    ${media.desktop`max-width:100%`};\n  }\n  & .posts-name{\n    ${media.tablet`font-size:2.4rem`};\n    ${media.mobile`font-size:2.2rem`};\n    padding-top:50px;\n    font-size:3.5rem;\n    text-align: center;\n    font-weight: bold;\n    white-space: pre-wrap;\n    word-break: break-all;\n  }\n  & .posts-detail{\n    text-align: center;\n    margin-top:20px;\n    font-size:1.2rem\n  }\n  & .posts-content{\n    word-break:break-all;\n    font-size:1.2rem;\n    margin-top:50px;\n    a {\n      color:#06c !important;\n      text-decoration: underline;\n      span{\n        color:#06c !important;\n      } \n    }\n    & *{\n      white-space: pre-wrap;\n      word-break: break-all;\n      line-height: 2.1;\n    } \n    & p br{\n      display: block;\n      content: \"\";\n      padding:10px 0px;\n    }\n    blockquote{\n      padding:4px 13px;\n      border-left:4px solid #3ab09e;;\n      background: #FBFCFD;\n      ${media.tablet`\n       font-size:1rem;\n       padding:2px 10px;\n       border-left:3px solid #3ab09e;\n      `};\n      ${media.mobile`\n       border-left:2px solid #3ab09e;\n       padding:2px 10px;\n      `}\n    }\n    p,ol,blockquote,span{\n      color:black\n    }\n  }\n  & .posts-created{\n    margin-top: 60px;\n    text-align: right;\n    font-size:1rem;\n    font-weight:100;\n  }\n  & .ql-syntax{\n    padding:20px;\n    ${media.tablet`\n      font-size:0.9rem;\n      padding:15px 15px;\n   `};\n   ${media.mobile`\n      padding:10px 10px;\n      font-size:0.8rem;\n      white-space: pre;\n      overflow:scroll;\n   `};\n   } \n`;\n\n\nexport const CommentContainerComp = styled.div`\n  position: relative;\n  margin:60px auto;\n  width: ${_width * 0.8 + \"px\"};\n  ${postMediaMixin};\n  & .blank_space{\n    height:100px;\n  }  \n  & .cmt-slo-box{\n   display: flex;\n   align-items: flex-end;\n   margin-bottom:30px;\n   position: relative;\n   & .cmt-icons{\n    font-size:1.7rem;\n    margin-right:12px;    \n   }\n   & .cmt-slo{\n    font-size:2rem;\n   }\n  }\n`;\nexport const CommentInputItem = styled.div`\n  textarea{\n    resize: none;\n    width:100%;\n    height: 100px;\n    box-sizing: border-box;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.03);\n    outline-style: none;\n    border-radius: 4px;\n    border:1px solid rgba(0,0,0,0.1);\n    padding:15px 15px;\n    font-size:1.125rem;\n  }\n  textarea::placeholder{\n    font-size:1.125rem;\n  }\n  & .cmt-login{\n    margin-top:20px;\n    position: relative;\n    ${media.mobile`\n      display:flex;\n      flex-direction:column;\n   `};\n    input {\n      border:1px solid rgba(0,0,0,0.2);\n      outline-style: none;\n      border-radius: 2px;\n      margin-right:15px;\n      padding:12.5px 7px;\n      background: white;\n      ${media.mobile`\n         margin:0;\n         margin-bottom:6px;\n      `}\n    }\n    & .cmt-submit-btn{\n      ${media.mobile`\n         position:relative;\n         width:100%;\n         padding:12.5px 0px;\n      `};\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\n      position: absolute;\n      background:#3ab09e;\n      color:white;\n      cursor:pointer;\n      top:0;\n      right:0;\n      height: 100%;\n      width:100px;\n      border-radius: 3px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      font-size:1.125rem\n    }\n  }\n  & .visible{\n    display: block;\n  }\n`;\n\nexport const CommentItmesComp = styled.div<ICommentItems>`\n  //box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\n  border-bottom: 1px solid rgba(0,0,0,0.2);\n  position: relative;\n  padding:30px 15px;\n  &.depth2{\n    background: rgba(0,0,0,0.02); \n    border: 1.5px solid rgba(0,0,0,0.02);\n    border-radius: 5px;\n  }\n  &.depth3{\n    background: rgba(0,0,0,0.024);\n    border: 1.5px solid rgba(0,0,0,0.024);\n    border-radius: 5px;          \n  }\n  &.depth4{\n    background:rgba(0,0,0,0.03);\n    border: 1.5px solid rgba(0,0,0,0.03);\n    border-radius: 5px;\n  }\n  & .cmt-whoami{\n    display: flex;\n    & .cmt-delete-icons{ \n      position: absolute;\n      right:10px; \n      font-size:1.6rem;\n      opacity: 0.6;\n    }\n    & .cmt-delete-box{\n      display: none;\n    }\n    & .visible{\n      display: block;\n    }\n    & .cmt-delete-inputbox{\n      display:flex;\n      position: absolute;\n      right:10px;\n      top:70px;\n      flex-direction: column;\n      input{\n        outline-style: none;\n        border:1px solid rgba(0,0,0,0.2);\n        padding:5px;\n        margin-bottom: 10px;\n      }  \n      & .delete-btn{\n        text-align: center;\n        padding:6.5px;\n        background: #3ab09e;\n        border:1px solid #3ab09e;\n        color:white;\n        border-radius: 4px;\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n        cursor: pointer;\n      }\n    }\n    & .cmt-delete-icons:hover{\n      opacity: 1;\n      cursor: pointer;\n    }\n    & img{\n      width:60px;\n      height: 60px;\n      border-radius: 100px;\n      border:1px solid rgba(0,0,0,0.08);\n      display: inline-block;\n      margin-right: 40px;\n    }\n    & .cmt-whoami-sub{\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n       & .cmt-writer{\n         display: inline-block;\n         font-size:1.125rem;\n         font-weight: bold;\n         margin-bottom: 6px;\n       }\n       & .cmt-created{\n         display: inline-block;\n         font-size:1rem;\n         opacity: 0.7\n       }\n    }\n  }\n  & .cmt-content{\n    margin-top:40px;\n    font-size:1.175rem;\n  }\n  & .cmt-reply-box{\n    margin-top:40px;\n    & .depth-reply-btn{\n      background: #3ab09e;\n      border:1px solid #3ab09e;\n      text-align: center;\n      padding:17px;\n      border-radius: 5px;\n      cursor: pointer;\n      display: none;\n      margin-top:23px;\n      font-size:1.125rem;\n      color:white;\n      &:hover{\n        background: white;\n        border:1px solid #3ab09e;\n        color:#3ab09e;\n      }\n    }\n    & .cmt-btn-reply{\n      font-size:1rem;\n      cursor:pointer;\n      display: inline-flex;\n      align-items: center;\n      border-radius: 4px;\n      & .reply-icons{\n        margin-right:6px;\n        font-size:1.125rem;\n        color:#3ab09e;\n      }\n    }\n    & .reply-depth{\n      display:none;\n      margin-top:20px;\n    }\n    & .visible{\n      display: block;\n    }\n  }\n  & .depth-reply-box{\n    display: none;\n    margin-top: 20px;\n    background: transparent;\n    border-radius: 4px;\n  }\n    \n`;\n////////////////////////////////////////\nexport const AdminLoginBoxComp = styled.div`\n  position: absolute;\n  width:30%;\n  left:50%;\n  top:40%;\n  transform: translate(-50%,-50%);\n  & .login-inputbox{\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n    & input{\n      padding:15px 10px;\n      outline-style: none;\n      border:1px solid rgba(0,0,0,0.2);\n      margin-bottom: 20px;\n    }\n  }\n  & .login-btn{\n    border:1px solid rgb(0,0,0,0.2);\n    width:100%;\n    height: 57px;\n    outline-style: none;\n    cursor: pointer;\n  }\n  & .certification-numberBox{ \n    display: flex;\n    button{\n      border:1px solid rgba(0,0,0,0.2);\n      outline-style: none;\n      height: 40px;\n      font-size: 12px;\n      letter-spacing: 1.2px;\n      cursor: pointer ;\n    }\n    input{\n      height: 40px;  \n      outline-style: none;\n      border:1px solid rgba(0,0,0,0.2);\n      margin-bottom: 20px;\n      margin-right: 15px;\n      font-size: 1rem;\n      padding-left: 10px;\n    }\n  }\n`;\n\nexport const TagsContainerComp = styled.div`\n   ${media.mobile`\n      position:relative;\n      padding-left:10px;\n      padding-rigth:10px;\n    `};\n   margin-top:50px;\n   padding-left:${leftWidth + \"px\"}; \n   width:100%;\n   position: absolute;\n   top:0;\n   & .tag-slo{\n    font-size:2.3675rem;\n    margin-bottom: 70px;\n   }\n   & .tags-box{\n    display: flex;\n    flex-direction: column;\n   }\n   & .tag-hash{\n    margin-bottom: 7px;\n    font-weight: 400;\n    color:#7DC5AF;\n    font-size:1.135rem;\n    display: inline-flex;\n    align-items: center;\n    padding:2px;\n    &:hover{\n      cursor:pointer;\n      color:#ff6b6b;\n    }\n   }\n`;\n//--------------------------------write---------------------------------------\n\nexport const WriteBox = (styled.div`\n   position: absolute;\n   border: 1px solid rgba(0, 0, 0, 0.2);\n   height: 100%;\n   width: 50%;\n   border-radius: 4px;\n   box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\n   overflow: scroll;\n`);\n\nexport const WriteConditionBox = memo(styled.section`\n   position: absolute;\n   right: 0;\n   width: 50%;\n   height: 100%;\n   overflow: scroll;\n   padding-bottom:100px;\n`);\n\n\nexport const WriteBtnBoxComp = (styled.div`\n   padding-left:60px;\n   margin-top:30px;\n   margin-bottom: 20px;\n`);\n\nexport const WriteBtnComp = styled.button`\n   border: 1px solid rgba(0, 0, 0, 0.2);\n   padding: 15px 25px;\n   font-size: 17px;\n   border-radius: 4px;\n   letter-spacing: 1.2px;\n   transition: 0.3s all;\n   background: #a5d8ff;\n   box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\n   color: black;\n   font-weight: 300;\n   margin-right: 30px;\n   &:hover {\n      cursor: pointer;\n      background-color: ${darken(0.1, \"#a5d8ff\")};\n   }\n   \n`;\n\nexport const SelectTopicBoxComp = styled.div`\n   padding-top:50px;\n   padding-left:60px;\n   padding-right: 60px;\n   & .post-select-box{\n   display: flex;\n   flex-wrap: wrap;\n   }\n   & h1{\n   font-size:1.7rem;\n   margin-bottom:40px;\n   }\n`;\n\nexport const SelectTopicItemComp = styled.div`\n  width:150px;\n  margin-bottom: 40px;\n  padding:0;\n  display: flex;\n  align-items: center;\n  & .select-input{\n    display: inline-block; \n    width:20px;\n    height: 20px;\n    margin-right: 15px;\n  }\n  & .select-label{\n    font-weight: 300;\n    margin-top: -1px;\n    font-size:120%;\n    cursor: pointer;\n  }\n`;\n\nexport const CreateNewTopicComp = styled.div`\n   padding-top:20px;\n   padding-left:60px;\n   padding-right: 60px;\n   & h1{\n    font-size:20px;\n    margin-bottom: 20px;\n   }\n   & .add-new-topic-btn{\n    color: #dee2e6;\n    font-size:30px;\n    cursor: pointer;\n    margin-top: 10px;\n   }\n   & .add-new-topic-btn:hover{\n    color: gray;\n   } \n`;\n\nexport const CreateNewTopicListBoxComp = styled.div`\n  width:180px;\n`;\n\nexport const DeleteTopicIconComp = styled.div<IDeleteTopicIconComp>`\n  display: flex;\n  font-size:20px;\n  cursor: pointer;\n  opacity: 0;\n  color: #dee2e6;\n  & :hover{\n    color:#ff6b6b;\n  }\n`;\n\nexport const AddTopicBtnComp = styled.div`\n  display: flex;\n  align-items: center;\n  & input{\n    padding:8px;\n    border:1px solid rgba(0,0,0.6);\n  }\n  & .make-new-topic-btn{\n    color: #dee2e6;\n    font-size:30px;\n    cursor: pointer;\n    margin-left: 15px;\n  }\n  & .make-new-topic-btn:hover{\n    color: gray;\n  } \n`;\n\nexport const CreateNewTopicListItemComp = styled.div`\n  margin-bottom:15px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  & span{\n    display: inline-block;\n    width:70%;\n    font-size:22px;\n    font-weight: 100;\n  }\n  &:hover{\n    ${DeleteTopicIconComp}{\n      opacity: 1;\n    }\n  }\n`;\n\n\nexport const SelectKindOfPostsBoxComp = styled.div`\n   padding-top:50px;\n   padding-left:60px;\n   padding-right: 60px;\n   & .post-select-box{\n   display: flex;\n   flex-wrap: wrap;\n   }\n   & h1{\n   font-size:1.7rem;\n   margin-bottom:40px;\n   }\n`;\n\n\nexport const SelectKindOfPosts = styled.div`\n  width:150px;\n  margin-bottom: 40px;\n  padding:0;\n  display: flex;\n  align-items: center;\n  & .select-input{\n    display: inline-block; \n    width:20px;\n    height: 20px;\n    margin-right: 15px;\n  }\n  & .select-label{\n    font-weight: 300;\n    margin-top: -1px;\n    font-size:120%;\n    cursor: pointer;\n  }\n`;\n\nexport const PostsDetailComp = styled.div`\n   padding-top:50px;\n   padding-left:60px;\n   padding-right: 60px;\n   & h1{\n    font-size:1.7rem;\n    margin-bottom: 30px;\n   }\n   & input{\n    width:100%;\n    height: 50px;\n    outline-style: none;\n    border:none;\n    padding-left: 10px;\n    border-radius: 5px;\n    background-color: ${lighten(0.1, \"#a5d8ff\")};\n   }\n`;\n\nexport const TemporaryStorageComp = styled.div`\n  padding-left:60px;\n  margin-top:50px;\n  margin-bottom:40px;\n  & .tsc-slo{\n    font-size:1.7rem;\n  }\n  & .temp_item{\n    display: flex;\n    justify-content: space-between;\n    padding-right: 60px;\n    align-items: center;\n    margin-top:20px;\n    & .posts-admin-delete{\n      font-size:1.4rem;\n      display: inline-block;\n      padding-top:5px;\n      &:hover{\n        cursor: pointer;\n      }\n    }\n  }\n`;\n\nexport const TemporaryPostComp = styled.div<any>`\n  cursor:pointer;\n  font-size:1.4rem;\n  &:hover{\n    text-decoration: underline;\n  }\n`;\n\nexport const ThumbnailComp = styled.div`\n  padding-left:60px;\n  padding-right: 60px;\n  margin-top:50px;\n  margin-bottom:50px;\n  & .thumbnail-slo{\n    font-size:1.7rem;\n    margin-bottom:20px;\n  }\n  & .thumbnail-imgbox{\n    margin-top:20px;\n    img{\n      border:1px solid rgba(0,0,0,0.2);\n      border-radius: 5px;\n    }\n  }\n  & > h2{\n    font-size:1.125rem;\n    margin-top:10px;\n    font-weight: 600;\n    color:#ff6b6b;\n  }\n`;\n//--------------------------------write---------------------------------------\n\n\nexport const AboutContainerComp = styled.div`\n  ${postsContainerMixin};\n  & .about-me-slogan{\n    margin-top:7px;\n    opacity: 0.6;\n  }\n  & .about-icon-box{\n    a {\n     display: flex;\n     align-items: center;\n    }\n    display: flex;\n    font-size:3rem;\n    margin-top:7px;\n    & .aib-mail{\n      cursor:pointer; \n      font-size:1.2rem;\n      margin-left:15px;\n      opacity: 0.6;\n    }\n    & .aib-github{\n      opacity: 0.6;\n      cursor:pointer;\n    }\n    & .aib-mail:hover,\n    & .aib-github:hover{\n      opacity: 1; \n    }    \n  }\n  & .about-me{\n    font-size:2.1rem;\n    font-weight: 600;\n  }\n  & .about-me-nickname{\n    margin-top:10px;\n    font-size: 1.2rem;\n    letter-spacing: 1.2px;\n  }\n  & .about-detail{\n    margin-top:30px;\n    & .about-detail-slo{\n      display: flex;\n      align-items: center;\n      font-size:1.4rem;\n      font-weight: 600;\n      margin-bottom: 15px;\n    }\n  }\n  & .about-tech{\n    & .about-tech-slo{\n      display: flex;\n      align-items: center;\n      font-size:1.4rem;\n      font-weight: 600;\n      margin-bottom:15px;\n    }\n    margin-top:30px;\n  }\n  & .about-book{\n    & .about-book-slo{\n      display: flex;\n      align-items: center;\n      font-size:1.4rem;\n      font-weight: 600;\n      margin-bottom:15px;\n    }\n    margin-top:30px;\n  }\n  li{\n    line-height: 1.2;\n    margin-bottom:7px;\n    display: flex;\n    align-items: center;\n  }\n  & .slo-icons{\n    color: #3ab09e;\n    margin-right:12px;\n  }\n  padding-bottom: 40px;\n`;","/Users/junggri/Desktop/react-blog/client/src/useHooks/useCSRF.tsx",["331","332"],"import React, { useEffect, useState } from \"react\";\nimport util from \"../lib/axios\";\n\n\nfunction CSRF() {\n   const [csrf, setCsrf] = useState(\"\");\n   useEffect(() => {\n      (async () => {\n         const { data } = await util.getCSRTtoken();\n         setCsrf(data.token);\n      })();\n      return function cleanUp() {\n         setCsrf(\"\");\n      };\n   }, []);\n\n   return csrf;\n}\n\nexport default CSRF;","/Users/junggri/Desktop/react-blog/client/src/config/axois.config.ts",[],"/Users/junggri/Desktop/react-blog/client/src/styles/Media.ts",["333","334","335","336"],"import { css } from \"styled-components\";\n\ninterface ISizes {\n   desktop: number\n   tablet: number\n   mobile: number\n\n   [index: string]: any\n}\n\nconst sizes: ISizes = {\n   desktop: 1250,\n   tablet: 1024,\n   bigMoblie: 600,\n   mobile: 500,\n   small: 262,\n   smallest: 219,\n};\n\nexport const media = Object.keys(sizes).reduce((acc: any, label: any) => {\n   acc[label] = (...args: any) => css`\n     @media(max-width:${sizes[label] / 16}em){\n    ${css(args)};\n  }\n`;\n   return acc;\n}, {});","/Users/junggri/Desktop/react-blog/client/src/pages/TextEditor.tsx",["337","338","339"],"import React from \"react\";\nimport { Editor } from \"../component\";\nimport { Snow } from \"../styles/snow\";\n\n\nfunction TextEditor({ history, location }: any) {\n\n   return (\n      <>\n         <Snow />\n         <Editor history={history} location={location} />;\n      </>\n   );\n}\n\nexport default TextEditor;\n","/Users/junggri/Desktop/react-blog/client/src/pages/Posts.tsx",["340","341","342"],"import React from \"react\";\nimport { PostsContainer } from \"../component\";\n\nfunction Posts({ match }: any) {\n   return <PostsContainer match={match} />;\n}\n\nexport default Posts;","/Users/junggri/Desktop/react-blog/client/src/pages/Entry.tsx",["343","344","345","346"],"import React, { useCallback, useEffect } from \"react\";\nimport { EntryContainerComp } from \"../styled-comp\";\nimport { ICommonModuleProps } from \"../modules/Common/common.interface\";\nimport useCommon from \"../useHooks/useCommon\";\nimport usePosts from \"../useHooks/usePosts\";\nimport { AboutContainer, EntryPostsContainer, SideBarContainer, SpecificTopicContainer, TagsContainer } from \"../component\";\nimport { IPostsModuleProps } from \"../modules/Posts/posts.interface\";\nimport { Route } from \"react-router-dom\";\nimport util from \"../lib/axios\";\nimport useCSRF from \"../useHooks/useCSRF\";\nimport useLoginFlag from \"../useHooks/useLoginFlag\";\n\nfunction SSREntry({ match, location }: any) {\n   useLoginFlag();\n   const csrf = useCSRF();\n   const { login, newRequest, setNewRequset, onGetGaCount, count }: ICommonModuleProps = useCommon();\n   const { AllPosts, getAllPosts, onClearPost, getPosts, posts }: IPostsModuleProps = usePosts();\n\n\n   useEffect(() => {\n      if (newRequest) {\n         getAllPosts();\n         setNewRequset(false);\n      }\n   }, [getAllPosts, newRequest, setNewRequset]);\n\n   const onDelete = useCallback((e: React.MouseEvent<HTMLElement>) => {\n      if (confirm(\"삭제할거야???\")) {\n         const uid = (e.currentTarget.parentNode as HTMLElement).dataset.id as string;\n         const topic = (e.currentTarget.parentNode as HTMLElement).dataset.topic as string;\n         (async () => {\n            await util.deletePost(uid, topic, csrf);\n            getAllPosts();\n         })();\n      }\n   }, [csrf, getAllPosts]);\n\n   useEffect(() => {\n      onGetGaCount();\n   }, []);\n\n   return (\n      <>\n         <EntryContainerComp>\n            <SideBarContainer login={login} location={location} count={count} />\n            <Route path={[\"/\", \"/post\"]} exact render={() => (\n               <EntryPostsContainer\n                  posts={AllPosts}\n                  onDelete={onDelete}\n                  login={login}\n                  csrf={csrf}\n               />\n            )} />\n            <Route path=\"/tag/:topic\" exact render={() => (\n               <SpecificTopicContainer\n                  match={match}\n                  posts={posts}\n                  login={login}\n                  onClearPost={onClearPost}\n                  getPosts={getPosts}\n               />\n            )} />\n            <Route path=\"/tag\" exact render={() => (\n               <TagsContainer Allposts={AllPosts} />\n            )} />\n            <Route path=\"/about\" exact render={() => (\n               <AboutContainer />\n            )} />\n         </EntryContainerComp>\n      </>\n   );\n}\n\nexport default SSREntry;\n","/Users/junggri/Desktop/react-blog/client/src/modules/Posts/index.ts",[],"/Users/junggri/Desktop/react-blog/client/src/modules/Topic/index.ts",["347","348","349","350","351","352","353","354","355","356","357"],"import util from \"../../lib/axios\";\nimport { ITopicinitialState, TopicAction } from \"./topic.interface\";\n\nexport const GET_TOPIC = \"topic/GET_TOPIC\";\nexport const GET_TOPIC_SUCCESS = \"topic/GET_TOPIC_SUCCESS\";\nexport const GET_TOPIC_ERROR = \"topic/GET_TOPIC_ERROR\";\n\n\nexport const getTopic = () => ({ type: GET_TOPIC });\nexport const getTopicSuccess = (payload: any[]) => ({ type: GET_TOPIC_SUCCESS, payload });\nexport const getTopicError = (e: Error) => ({ type: GET_TOPIC_ERROR, e });\n\n\nexport const onReqTopicsName = () => async (dispatch: any, getState: any) => {\n   dispatch(getTopic());\n   try {\n      const { data } = await util.getTopicName();\n      dispatch(getTopicSuccess(data));\n   } catch (e) {\n      dispatch(getTopicError(e));\n   }\n};\n\n\nconst initialState = {\n   topic: null,\n   loading: false,\n   error: null,\n};\n\nexport default function Topic(state: ITopicinitialState = initialState, action: TopicAction) {\n   switch (action.type) {\n      case GET_TOPIC:\n         return {\n            ...state,\n            loading: true,\n         };\n      case GET_TOPIC_SUCCESS:\n         return {\n            ...state,\n            topic: action.payload,\n            loading: false,\n         };\n      case GET_TOPIC_ERROR:\n         return {\n            ...state,\n            error: action.error,\n         };\n      default :\n         return state;\n   }\n}","/Users/junggri/Desktop/react-blog/client/src/modules/Common/index.ts",["358","359","360","361","362","363","364","365","366","367"],"import { ICommonAction, ICommonState } from \"./common.interface\";\nimport util from \"../../lib/axios\";\n\n\nexport const SET_IS_LOGIN = \"common/SET_IS_LOGIN\";\n\nexport const NEW_REQUEST = \"common/NEW_REQUEST\";\n\nexport const GET_GA_COUNT = \"common/GET_GA_COUNT\";\nexport const GET_GA_COUNT_SUCCESS = \"common/GET_GA_COUNT_SUCEESS\";\nexport const GET_GA_COUNT_FAIL = \"common/GET_GA_COUNT_FAIL\";\n\nexport const onSetIsLogin = (payload: boolean) => ({ type: SET_IS_LOGIN, payload });\n\nexport const onNewRequset = (payload: boolean) => ({ type: NEW_REQUEST, payload: payload });\n\nexport const onGetGaCount = () => ({ type: GET_GA_COUNT });\nexport const onGetGaCountSuccess = (payload: any) => ({ type: GET_GA_COUNT_SUCCESS, payload });\nexport const onGetGaCountFail = (e: Error) => ({ type: GET_GA_COUNT_FAIL, error: e });\n// typescript는 const를 이해하므로(typeof CHECK_GUESTBOOK은 string이 아니라 'CHECK_GUESTBOOK'입니다)\n// 액션 이름을 그대로 쓰셔도 됩니다.\n\n//thunk 생성함\n\nexport const getCount = () => async (dispatch: any) => {\n   try {\n      dispatch(onGetGaCount());\n      const { data } = await util.getGACount();\n      dispatch(onGetGaCountSuccess(data));\n   } catch (e) {\n      dispatch(onGetGaCountFail(e));\n   }\n};\n\n\nconst initialState: ICommonState = {\n   count: null,\n   login: false,\n   loading: false,\n   newRequest: true,\n   e: null,\n};\n\n\nexport default function common(state: ICommonState = initialState, action: ICommonAction): ICommonState {\n   switch (action.type) {\n      case SET_IS_LOGIN:\n         return {\n            ...state,\n            login: action.payload as boolean,\n         };\n      case NEW_REQUEST:\n         return {\n            ...state,\n            newRequest: action.payload as boolean,\n         };\n      case GET_GA_COUNT:\n         return {\n            ...state,\n         };\n      case GET_GA_COUNT_SUCCESS:\n         return {\n            ...state,\n            count: action.payload,\n         };\n      case GET_GA_COUNT_FAIL:\n         return {\n            ...state,\n            e: action.e,\n         };\n      default:\n         return state;\n   }\n}","/Users/junggri/Desktop/react-blog/client/src/modules/TextEditor/index.ts",["368","369","370","371","372","373","374"],"// 액션 타입을 선언합니다\n// 뒤에 as const 를 붙여줌으로써 나중에 액션 객체를 만들게 action.type 의 값을 추론하는 과정에서\n// action.type 이 string 으로 추론되지 않고 'counter/INCREASE' 와 같이 실제 문자열 값으로 추론 되도록 해줍니다.\nimport { EditorAction, ITextInitialProps } from \"./textEdit.interface\";\n\nconst SET_CONTENT = \"textEdit/SET_CONTENT\" as const;\nconst SET_CONTENT_NAME = \"textEdit/SET_CONTENT_NAME\" as const;\nconst SET_TOPIC = \"textEdit/SET_TOPIC\" as const;\nconst SET_KIND_OF_POSTS = \"textEdit/SET_KIND_OF_POSTS\" as const;\nconst SET_DETAIL = \"textEdit/SET_DETAIL\" as const;\nconst SET_THUMBNAIL = \"textEdit/SET_THUMBNAIL\" as const;\nconst SET_TEMP_DATA = \"textEdit/SET_TEMP_DATA\" as const;\n\nexport const onSetContent = (content: string) => ({ type: SET_CONTENT, payload: content });\nexport const onSetContentName = (contentName: string) => ({ type: SET_CONTENT_NAME, payload: contentName });\nexport const onSetTopic = (topic: string) => ({ type: SET_TOPIC, payload: topic });\nexport const onSetKindOfPosts = (kindOfPosts: string) => ({ type: SET_KIND_OF_POSTS, payload: kindOfPosts });\nexport const onSetDetail = (detail: string) => ({ type: SET_DETAIL, payload: detail });\nexport const onSetThumbNail = (thumbnail: string) => ({ type: SET_THUMBNAIL, payload: thumbnail });\nexport const onSetTempData = (data: ITextInitialProps) => ({ type: SET_TEMP_DATA, payload: data });\n\nconst initialState: ITextInitialProps = {\n   contentName: \"\",\n   content: \"\",\n   topicName: \"\",\n   kindofPosts: \"\",\n   detail: \"\",\n   thumbnail: null,\n};\n\n\nfunction TextEditor(state: ITextInitialProps = initialState, action: EditorAction): ITextInitialProps {\n   switch (action.type) {\n      case SET_CONTENT:\n         return {\n            ...state,\n            content: action.payload,\n         };\n      case SET_CONTENT_NAME:\n         return {\n            ...state,\n            contentName: action.payload,\n         };\n      case SET_TOPIC:\n         return {\n            ...state,\n            topicName: action.payload,\n         };\n      case SET_KIND_OF_POSTS:\n         return {\n            ...state,\n            kindofPosts: action.payload,\n         };\n      case SET_DETAIL:\n         return {\n            ...state,\n            detail: action.payload,\n         };\n      case SET_THUMBNAIL:\n         return {\n            ...state,\n            thumbnail: action.payload,\n         };\n      case SET_TEMP_DATA:\n         return {\n            ...state,\n            contentName: action.payload.contentName,\n            content: action.payload.content,\n            topicName: action.payload.topicName,\n            kindofPosts: action.payload.kindofPosts,\n            detail: action.payload.detail,\n            thumbnail: action.payload.thumbnail,\n         };\n      default:\n         return state;\n   }\n\n}\n\nexport default TextEditor;","/Users/junggri/Desktop/react-blog/client/src/modules/Comment/index.ts",["375","376","377","378","379","380"],"import {ICmtAction, ICommnet, IInitialState} from \"./cmtInterface\";\nimport util from \"../../lib/axios\";\nimport {GET_ALL_POSTS_ERROR} from \"../Posts\";\n\nexport const GET_COMMENT = \"data/GET_COMMENT\";\nexport const GET_COMMENT_SUCCESS = \"data/GET_COMMENT_SUCCESS\";\nexport const GET_COMMENT_ERROR = \"data/GET_COMMENT_ERROR\";\n\n\nexport const getComment = () => ({type: GET_COMMENT});\nexport const getCommentSuccess = (data: ICommnet) => ({type: GET_COMMENT_SUCCESS, data});\nexport const getCommentError = (e: Error) => ({type: GET_COMMENT_ERROR, error: e});\n\n\nconst InitialState: IInitialState = {\n    list: null,\n    loading: false,\n    error: null,\n};\n\nexport const onGetComment = (cmt: string) => async (dispatch: any) => {\n    dispatch(getComment());\n    try {\n        const {data} = await util.getComment(cmt);\n        dispatch(getCommentSuccess(data.result));\n    } catch (e) {\n        dispatch(getCommentError(e));\n    }\n};\n\n\nexport default function Comment(state: IInitialState = InitialState, action: ICmtAction): IInitialState {\n    switch (action.type) {\n        case GET_COMMENT:\n            return {\n                ...state,\n                loading: true,\n            };\n        case GET_COMMENT_SUCCESS:\n            return {\n                ...state,\n                list: action.data,\n            };\n        case GET_ALL_POSTS_ERROR:\n            return {\n                ...state,\n                error: action.error,\n            };\n        default:\n            return state;\n    }\n}","/Users/junggri/Desktop/react-blog/client/src/useHooks/useCommon.tsx",["381","382"],"import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../modules\";\nimport { getCount, onNewRequset, onSetIsLogin } from \"../modules/Common\";\n\nexport default function useCommon() {\n   const dispatch = useDispatch();\n   const { count, login, loading, newRequest, e } = useSelector((state: RootState) => state.common);\n\n   const onSetLogin = useCallback((state: boolean) => {\n      dispatch(onSetIsLogin(state));\n   }, [dispatch]);\n\n   const setNewRequset = useCallback((state: boolean) => {\n      //state true mean state need new Request, false is opposite/**/\n      dispatch(onNewRequset(state));\n   }, [dispatch]);\n\n   const onGetGaCount = useCallback(() => {\n      dispatch(getCount());\n   }, [dispatch]);\n\n\n   // usePreloader(() => dispatch(getCount()));\n\n   // usePreloader([() => dispatch(getCount()), () => dispatch(getCount())]);\n\n   return {\n      count,\n      login,\n      loading,\n      onSetLogin,\n      newRequest,\n      setNewRequset,\n      onGetGaCount,\n      e,\n   };\n}","/Users/junggri/Desktop/react-blog/client/src/styles/snow.tsx",[],"/Users/junggri/Desktop/react-blog/client/src/useHooks/usePosts.tsx",["383"],"import { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../modules\";\nimport { onRequestAllPosts, onRequestPosts, onRequsetPost } from \"../modules/Posts\";\nimport { useCallback } from \"react\";\nimport { clearPost, clearPostData } from \"../modules/Posts/lib/PostsAction\";\nimport { usePreloader } from \"../lib/PreloadContext\";\n\nexport default function usePosts() {\n   const dispatch = useDispatch();\n   const { posts, post, AllPosts } = useSelector((state: RootState) => state.posts);\n\n   const getPosts = useCallback((params: string) => {\n      dispatch(onRequestPosts({ params: params }));\n   }, [dispatch]);\n\n   const getPost = useCallback((topic: string, postsId: string) => {\n      dispatch(onRequsetPost({ topic, postsId }));\n   }, [dispatch]);\n\n   const getAllPosts = useCallback(() => {\n      dispatch(onRequestAllPosts({}));\n   }, [dispatch]);\n\n   const onClearPost = useCallback(() => {\n      dispatch(clearPost());\n   }, [dispatch]);\n\n   const onCleatPostData = useCallback(() => {\n      dispatch(clearPostData());\n   }, [dispatch]);\n\n   usePreloader(() => dispatch(onRequestAllPosts({})));\n\n   return {\n      AllPosts,\n      posts,\n      post,\n      getPosts,\n      getPost,\n      getAllPosts,\n      onClearPost,\n      onCleatPostData,\n   };\n}","/Users/junggri/Desktop/react-blog/client/src/useHooks/useLoginFlag.tsx",["384","385","386"],"import React, { useEffect } from \"react\";\nimport useCommon from \"./useCommon\";\nimport checkUserState from \"../lib/checkUserState\";\n\nfunction LoginFlag() {\n   const { onSetLogin } = useCommon();\n\n   useEffect(() => {\n      const token = localStorage.getItem(\"_jt\");\n      const status = checkUserState(token);\n      status ? onSetLogin(true) : onSetLogin(false);\n   }, []);\n}\n\nexport default LoginFlag;","/Users/junggri/Desktop/react-blog/client/src/modules/Posts/lib/PostsUtil.ts",["387","388","389","390","391","392","393","394","395","396","397","398"],"import { DataAction } from \"../posts.interface\";\n\ninterface IParameter {\n   params?: string\n   topic?: string\n   postsId?: string\n}\n\nexport const reducerUtil = {\n   initial: (initialState = null) => ({\n      loading: false,\n      data: initialState,\n      error: null,\n   }),\n\n   loading: (prevState = null) => ({\n      loading: true,\n      data: prevState,\n      error: null,\n   }),\n\n   success: (payload: any) => ({\n      loading: false,\n      data: payload,\n      error: null,\n   }),\n\n   error: (error: Error) => ({\n      loading: false,\n      data: null,\n      error: error,\n   }),\n};\n\n\nexport const createThunk = (type: string, cb: any) => {\n   const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n   return ({ ...parameter }: IParameter) => async (dispatch: any) => {\n      dispatch({ type: type });\n      try {\n         if (type === \"data/GET_POSTS\") {\n            const { data } = await cb(parameter.params);\n            dispatch({ type: SUCCESS, payload: data });\n         } else if (type === \"data/GET_POST\") {\n            const { data } = await cb(parameter.topic, parameter.postsId);\n            dispatch({ type: SUCCESS, payload: data });\n         } else {\n            const { data } = await cb();\n            dispatch({ type: SUCCESS, payload: data });\n         }\n      } catch (e) {\n         console.error(e);\n         dispatch({ type: ERROR, error: e });\n      }\n   };\n};\n\n\nexport function handleAction(type: string, key: string, keepData?: boolean) {\n   const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n   return (state: any, action: DataAction) => {\n      switch (action.type) {\n         case type:\n            return {\n               ...state,\n               [key]: reducerUtil.loading(keepData ? state[key].data : null),\n            };\n         case SUCCESS:\n            return {\n               ...state,\n               [key]: reducerUtil.success(action.payload),\n            };\n         case ERROR:\n            return {\n               ...state,\n               [key]: reducerUtil.error(action.error),\n            };\n      }\n   };\n}","/Users/junggri/Desktop/react-blog/client/src/component/index.tsx",[],"/Users/junggri/Desktop/react-blog/client/src/modules/Posts/lib/PostsAction.ts",["399","400","401","402","403","404","405","406","407","408","409","410","411","412"],"import {\n   CLEAR_POST,\n   CLEAR_POST_DATA,\n   GET_ALL_POSTS,\n   GET_ALL_POSTS_ERROR,\n   GET_ALL_POSTS_SECCUESS,\n   GET_POST,\n   GET_POST_ERROR,\n   GET_POST_SUCCESS,\n   GET_POSTS,\n   GET_POSTS_ERROR,\n   GET_POSTS_SUCCESS,\n} from \"../index\";\n\nexport const clearPost = () => ({\n   type: CLEAR_POST,\n});\n\nexport const clearPostData = () => ({\n   type: CLEAR_POST_DATA,\n});\nexport const onRequest = () => ({\n   type: GET_POSTS,\n});\n\nexport const onRequestSuccuess = (payload: any[]) => ({\n   type: GET_POSTS_SUCCESS,\n   payload: payload,\n});\n\nexport const onRequestError = (e: Error) => ({\n   type: GET_POSTS_ERROR,\n   error: e,\n});\n\nexport const onRequestPost = () => ({\n   type: GET_POST,\n});\n\nexport const onRequestPostSuccess = (payload: any[]) => ({\n   type: GET_POST_SUCCESS,\n   payload: payload,\n});\n\nexport const onRequestPostError = (e: Error) => ({\n   type: GET_POST_ERROR,\n   error: e,\n});\n\nexport const onRequsetAllPosts = () => ({\n   type: GET_ALL_POSTS,\n});\n\nexport const onRequsetAllPostsSuccess = (payload: any[]) => ({\n   type: GET_ALL_POSTS_SECCUESS,\n   payload: payload,\n});\n\nexport const onRequestAllPostsError = (e: Error) => ({\n   type: GET_ALL_POSTS_ERROR,\n   error: e,\n});\n\n","/Users/junggri/Desktop/react-blog/client/src/lib/checkUserState.ts",["413"],"import jwt from \"jsonwebtoken\";\n\nexport default function checkJwtToken(token: string | null) {\n   if (token !== null) {\n      try {\n         const decoded = jwt.verify(token, process.env.REACT_APP_JWT_SECRET as string);\n         return decoded;\n      } catch (e) {\n         localStorage.removeItem(\"_jt\");\n      }\n   }\n}","/Users/junggri/Desktop/react-blog/client/src/lib/PreloadContext.tsx",["414","415","416","417","418","419","420","421","422"],"import { createContext, useContext } from \"react\";\n\nconst PreloadContext = createContext(null);\nexport default PreloadContext;\n\nexport const Preloader = ({ resolve }: any) => {\n   const preloadContext: any = useContext(PreloadContext);\n   if (!preloadContext) return null;\n   if (preloadContext.done) return null;\n   if (resolve.length !== 0)\n      resolve.forEach((func: any) => {\n         preloadContext.promises.push(Promise.resolve(func()));\n      });\n   return null;\n};\n\nexport const usePreloader = (resolve: any) => {\n   const preloadContext: any = useContext(PreloadContext);\n   if (!preloadContext) return null;\n   if (preloadContext.done) return null;\n   preloadContext.promises.push(Promise.resolve(resolve()));\n};","/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/Editor.tsx",["423","424","425","426","427","428","429","430","431","432","433","434","435"],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport util from \"../../lib/axios\";\nimport { formats, modules } from \"../../config/textEditor.config\";\nimport { WriteBox, WriteConditionBox } from \"../../styled-comp\";\nimport useTopic from \"../../useHooks/useTopic\";\nimport useTextEdit from \"../../useHooks/useTextEdit\";\nimport useCSRF from \"../../useHooks/useCSRF\";\nimport useCommon from \"../../useHooks/useCommon\";\nimport { ITextEditModuleProps } from \"../../modules/TextEditor/textEdit.interface\";\nimport { ITopicModuleProps } from \"../../modules/Topic/topic.interface\";\nimport { ICommonModuleProps } from \"../../modules/Common/common.interface\";\nimport { ITempPost } from \"../../interface/index.interface\";\nimport { CreateNewTopic, KindOfPosts, PostsDetail, SelectTopic, StoragePost, TextEditBtnBox, Thumbnail, WriteTopicName } from \"../index\";\nimport qs from \"query-string\";\nimport checkUserState from \"../../lib/checkUserState\";\n\n\nconst Editor = ({ history, location }: any) => {\n   const ReactQuill = typeof window === \"object\" ? require(\"react-quill\") : () => false;\n   const csrf = useCSRF();\n   const ref = useRef<any>(null);\n   const [mode, setMode] = useState<string>(\"write\");\n   const [temp, setTemp] = useState([]);\n   const { setNewRequset, login }: ICommonModuleProps = useCommon();\n   const { topic, requestTopic }: ITopicModuleProps = useTopic();\n   const {\n      data,\n      setContent,\n      setContentName,\n      setTopic,\n      setKindOfPosts,\n      setDetail,\n      setTempData,\n      setThumbnail,\n   }: ITextEditModuleProps = useTextEdit();\n\n\n   useEffect(() => {\n      (async () => {\n         const { data } = await util.getTempPost();\n         setTemp(data);\n      })();\n      return () => setTempData({\n         contentName: \"\",\n         content: \"\",\n         topicName: \"\",\n         kindofPosts: \"\",\n         detail: \"\",\n      });\n   }, [setTempData]);\n\n   useEffect(() => {\n      const token = localStorage.getItem(\"_jt\");\n      const status = checkUserState(token);\n      if (status) {\n         requestTopic();\n         ref.current.focus();\n      } else {\n         history.push(\"/\");\n      }\n   }, [history, requestTopic, login]);\n\n\n   const howToSave = useCallback((mode: string, cb: any, _data?: ITempPost) => {\n      // if (!_data) return history.push(\"/write\");\n      setMode(mode);\n      (async () => {\n         const { data } = await cb;\n         ref.current.editor.scrollingContainer.innerHTML = mode === \"temp\" ? data : data.content;\n         setTempData({\n            contentName: mode === \"temp\" ? _data?.content_name : data.result[0].content_name,\n            content: mode === \"temp\" ? \"\" : data.content,\n            topicName: mode === \"temp\" ? _data?.topic : data.result[0].topic,\n            kindofPosts: mode === \"temp\" ? \"\" : data.result[0].kindofPosts,\n            detail: mode === \"temp\" ? _data?.detail : data.result[0].detail,\n         });\n      })();\n   }, [setTempData]);\n\n   useEffect(() => {\n      const _qs = qs.parse(location.search);\n      if (Object.keys(_qs)[0] === \"temp\" && temp.length !== 0) {\n         const post: ITempPost[] = temp.filter((e: ITempPost) => e.uid === Object.values(_qs)[0]);\n         howToSave(\"temp\", util.getTempPostFromId(Object.values(_qs)[0] as string), post[0]);\n      } else if (Object.keys(_qs)[0] === \"modify\") {\n         howToSave(\"modify\", util.getPostFromPostId(Object.values(_qs)[1] as string, Object.values(_qs)[0] as string));\n      }\n   }, [setTempData, temp, location, howToSave]);\n\n\n   const onNameChange = useCallback((data: string) => {\n      setContentName(data);\n   }, [setContentName]);\n\n   const rteChange = useCallback((content: any, delta: any, source: any, editor: any) => {\n      setContent(ref.current.state.value);\n   }, [setContent]);\n\n   const onIsChecked = useCallback((name: string) => {\n      setTopic(name);\n   }, [setTopic]);\n\n   const onCheckKindOfPosts = useCallback((kindOf: string) => {\n      setKindOfPosts(kindOf);\n   }, [setKindOfPosts]);\n\n   const onChangeDetail = useCallback((detail: string) => {\n      setDetail(detail);\n   }, [setDetail]);\n\n   const onChangeThumbnail = useCallback((img: string) => {\n      setThumbnail(img);\n   }, [setThumbnail]);\n\n   const onMakeOrDelteTopic = useCallback(() => {\n      requestTopic();\n   }, [requestTopic]);\n\n\n   const onSubmit = async (): Promise<void> => {\n      if (data.content === \"\" || data.contentName === \"\" || data.detail === \"\" || data.kindofPosts === \"\" || data.topicName === \"\") {\n         alert(\"정보를 입력하세요\");\n      } else {\n         const result = mode === \"write\"\n            ? await util.savePost(data, csrf)\n            : mode === \"temp\"\n               ? await util.saveTempPost(data, Object.values(qs.parse(location.search))[0] as string, csrf)\n               : await util.modifyPost(data, Object.values(qs.parse(location.search))[0] as string, csrf);\n         if (result.request.status === 200) history.push(\"/\");\n         setNewRequset(true);\n      }\n   };\n\n   const onSaveTemporaryPost = async (): Promise<void> => {\n      const temp_postId = Object.values(qs.parse(location.search))[0] as string;\n      const result = await util.temporaryPost(data, csrf, temp_postId);\n      if (result.request.status === 200) history.push(\"/\");\n\n   };\n\n   const onDelete = useCallback((target: string) => {\n      (async () => {\n         await util.deleteTempPost(target, csrf);\n      })();\n      const new_temp = temp.filter((e: ITempPost) => e.uid !== target);\n      setTemp(new_temp);\n   }, [temp, csrf]);\n\n\n   return (\n      <>\n         <WriteBox>\n            <WriteTopicName onNameChange={onNameChange} value={data.contentName} />\n            <ReactQuill theme=\"snow\"\n                        onChange={rteChange}\n                        modules={modules}\n                        formats={formats}\n                        placeholder=\"입력하세요.\"\n                        ref={ref} />\n         </WriteBox>\n         <WriteConditionBox>\n            <SelectTopic onIsChecked={onIsChecked} topic={topic} checked={data.topicName} />\n            <CreateNewTopic topic={topic} token={csrf} onMakeOrDelteTopic={onMakeOrDelteTopic} />\n            <KindOfPosts onCheck={onCheckKindOfPosts} checked={data.kindofPosts} />\n            <PostsDetail onChangeDetail={onChangeDetail} detailValue={data.detail} />\n            <Thumbnail token={csrf} onChangeThumbnail={onChangeThumbnail} />\n            <TextEditBtnBox onSubmit={onSubmit} onSaveTemporaryPost={onSaveTemporaryPost} />\n            <StoragePost temp={temp} onDelete={onDelete} />\n         </WriteConditionBox>\n      </>\n   );\n};\n\n\nexport default Editor;\n","/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/TextEditBtnBox.tsx",["436"],"import React from \"react\";\nimport { WriteBtnBoxComp, WriteBtnComp } from \"../../styled-comp\";\nimport { ITextEditBtnBoxProps } from \"../../interface/index.interface\";\n\n\nconst TextEditBtnBox = ({ onSubmit, onSaveTemporaryPost }: ITextEditBtnBoxProps) => {\n   return (\n      <WriteBtnBoxComp>\n         <WriteBtnComp onClick={onSubmit}>등록하기</WriteBtnComp>\n         <WriteBtnComp onClick={onSaveTemporaryPost}>임시저장</WriteBtnComp>\n      </WriteBtnBoxComp>\n   );\n};\nexport default TextEditBtnBox;","/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/CreateNewTopic.tsx",[],"/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/SelectKindOfPosts.tsx",[],"/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/StoragePost.tsx",["437"],"import React from \"react\";\nimport { TemporaryPostComp, TemporaryStorageComp } from \"../../styled-comp\";\nimport { Link } from \"react-router-dom\";\nimport { MdDelete } from \"react-icons/md\";\n\ninterface ITempPost {\n   uid: string,\n   topic: string,\n   content_name: string,\n   created: string,\n   detail: string,\n   file: string\n}\n\nconst Srotage = ({ temp, onDelete }: any) => {\n\n   const onClick = (e: React.MouseEvent) => {\n      onDelete((e.currentTarget as HTMLElement).dataset.id as string);\n   };\n\n\n   if (temp === null) return null;\n   if (temp.length === 0) return null;\n\n   return (\n      <TemporaryStorageComp>\n         <div className=\"tsc-slo\">임시저장</div>\n         <div>\n            {temp.map((e: ITempPost) => (\n               <div className=\"temp_item\" key={e.uid}>\n                  <TemporaryPostComp>\n                     <Link to={`/write?temp=${e.uid}`}>{e.content_name}</Link>\n                  </TemporaryPostComp>\n                  <span className='posts-admin-delete' onClick={onClick} data-id={e.uid}><MdDelete /></span>\n               </div>\n            ))}\n         </div>\n      </TemporaryStorageComp>\n   );\n};\n\nexport default React.memo(Srotage);","/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/Thumbnail.tsx",["438","439","440"],"import React, { useRef } from \"react\";\nimport { ThumbnailComp } from \"../../styled-comp\";\nimport util from \"../../lib/axios\";\n\n\nconst Thumbnail = ({ token, onChangeThumbnail }: { token: string, onChangeThumbnail: any }) => {\n   const imgRef: any = useRef(null);\n\n   const onChangeImg = async (e: any) => {\n      const formData = new FormData();\n      formData.append(\"data\", e.target.files[0]);\n      imgRef.current.src = URL.createObjectURL(e.target.files[0]);\n      const { data } = await util.saveThumbnail(token, formData);\n      onChangeThumbnail(data.filename);\n   };\n\n   return (\n      <ThumbnailComp>\n         <div className=\"thumbnail-slo\">썸네일 이미지 설정</div>\n         <input type=\"file\" name=\"file\" accept=\"image/*\" multiple onChange={onChangeImg} />\n         <h2>이미지 저장할때 jpg, png로 저장해야한다 svg는 사용할 수 없다는 거 알지?</h2>\n         <section className=\"thumbnail-imgbox\">\n            <img ref={imgRef} />\n         </section>\n      </ThumbnailComp>\n   );\n};\n\nexport default React.memo(Thumbnail);","/Users/junggri/Desktop/react-blog/client/src/component/Content/PostsContainer.tsx",["441","442","443","444"],"import React, { useEffect } from \"react\";\nimport { PostsContainerComp } from \"../../styled-comp\";\nimport { IPostDataProps, IPostsModuleProps } from \"../../modules/Posts/posts.interface\";\nimport usePosts from \"../../useHooks/usePosts\";\nimport { Link } from \"react-router-dom\";\nimport { CgHome } from \"react-icons/cg\";\nimport Highlight from \"react-highlight.js\";\nimport createDOMPurify from \"dompurify\";\nimport { usePreloader } from \"../../lib/PreloadContext\";\nimport { onRequsetPost } from \"../../modules/Posts\";\nimport { useDispatch } from \"react-redux\";\nimport CommentContainer from \"./Comment\";\nimport { onGetComment } from \"../../modules/Comment\";\nimport Meta from \"../../useHooks/UseMeta\";\n\nconst DOMPurify = typeof window === \"object\" ? createDOMPurify(window) : () => false;\n\nfunction PostsContainer({ match }: any) {\n   const { getPost, post, onCleatPostData }: IPostsModuleProps = usePosts();\n   const { data } = post;\n   const dispatch = useDispatch();\n\n   usePreloader(() => dispatch(onRequsetPost({ topic: match.params.topic, postsId: match.params.postsId })));\n   usePreloader(() => dispatch(onGetComment(match.params.postsId)));\n\n   useEffect(() => {\n      getPost(match.params.topic, match.params.postsId);\n      return () => onCleatPostData();\n   }, [match.params.topic, match.params.postsId, onCleatPostData, getPost]);\n\n\n   if (!post.data) return null;\n\n   const MakeHtml = () => ({\n      __html: typeof window === \"object\" ? (DOMPurify as any).sanitize((data as IPostDataProps).content) : null,\n   });\n\n   const meta = {\n      title: (data as IPostDataProps).result[0].content_name,\n      description: (data as IPostDataProps).result[0].detail,\n      image: !(data as IPostDataProps).result[0].thumbnail\n         ? \"https://www.junggri.com/images/og.jpg\"\n         : `https://www.junggri.com/thumbnail/${(data as IPostDataProps).result[0].thumbnail}`,\n      type: \"website\",\n   };\n\n   return (\n      <>\n         <Meta data={meta} />\n         <PostsContainerComp>\n            <div className=\"posts-container-iconbox\">\n               <Link to=\"/\">\n                  <CgHome className=\"icon-tohome\" />\n               </Link>\n            </div>\n            <div className=\"posts-name\">\n               {(data as IPostDataProps).result[0].content_name}\n            </div>\n            <div className=\"posts-detail\">\n               {(data as IPostDataProps).result[0].detail}\n            </div>\n            <Highlight language=\"react\">\n               <div dangerouslySetInnerHTML={MakeHtml()} className=\"posts-content\" />\n            </Highlight>\n            <div className=\"posts-created\">\n               {(data as IPostDataProps).result[0].created}\n            </div>\n         </PostsContainerComp>\n         <CommentContainer\n            postname={(data as IPostDataProps).result[0].content_name}\n            postid={match.params.postsId}\n            topic={match.params.topic}\n         />\n      </>\n   );\n}\n\nexport default PostsContainer;","/Users/junggri/Desktop/react-blog/client/src/component/Content/Comment.tsx",["445","446"],"import React, { useEffect, useState } from \"react\";\nimport { CommentContainerComp, CommentInputItem } from \"../../styled-comp\";\nimport useCSRF from \"../../useHooks/useCSRF\";\nimport useComment from \"../../useHooks/useComment\";\nimport CommentItems from \"./CommentItems\";\nimport util from \"../../lib/axios\";\nimport { FaRegCommentDots } from \"react-icons/fa\";\nimport { ICommonModuleProps } from \"../../modules/Common/common.interface\";\nimport useCommon from \"../../useHooks/useCommon\";\n\n\nfunction CommentContainer({ postname, postid, topic }: { postname: string, postid: string, topic: string }) {\n   const csrf = useCSRF();\n   const { list, getComment } = useComment();\n   const { setNewRequset }: ICommonModuleProps = useCommon();\n   const [cmt, setCmt] = useState(\"\");\n   const [auth, setAuth] = useState({\n      cmt_user: \"\",\n      cmt_pwd: \"\",\n   });\n\n   useEffect(() => {\n      getComment(postid);\n   }, [postid]);\n\n\n   const onChangeCmt = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      setCmt(e.target.value);\n   };\n\n   const onChangeAuth = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setAuth({\n         ...auth,\n         [e.currentTarget.name]: e.currentTarget.value,\n      });\n   };\n\n   const onSubmit = async (e: any) => {\n      if (cmt === \"\") return alert(\"글을 입력해주세요\");\n      if (!auth.cmt_pwd || !auth.cmt_pwd) return alert(\"댓글을 작성하시려면 아이디와 비밀번호를 입력해주세요\");\n      const grp = e.currentTarget.parentNode.parentNode.parentNode.dataset.grp;\n      await util.saveComment(postname, cmt, grp, topic, postid, auth.cmt_user, auth.cmt_pwd, csrf);\n      getComment(postid);\n      setNewRequset(true);\n      setCmt(\"\");\n      setAuth({\n         cmt_user: \"\",\n         cmt_pwd: \"\",\n      });\n   };\n\n   if (list === null) return null;\n   return (\n      <CommentContainerComp data-grp={!list.length ? 1 : list[list.length - 1].bgroup + 1}>\n         <div className=\"cmt-slo-box\">\n            <FaRegCommentDots className=\"cmt-icons\" />\n            <span className=\"cmt-slo\">comment</span>\n         </div>\n         <CommentInputItem>\n            <textarea placeholder=\"댓글을 입력해주세요.\" value={cmt} onChange={onChangeCmt} />\n            <div className=\"cmt-login\">\n               <input type=\"text\" name=\"cmt_user\" value={auth.cmt_user} placeholder=\"이름\" onChange={onChangeAuth} />\n               <input type=\"password\" name=\"cmt_pwd\" value={auth.cmt_pwd} placeholder=\"비밀번호\"\n                      onChange={onChangeAuth} />\n               <div className=\"cmt-submit-btn\" onClick={onSubmit}>\n                  <span>등록하기</span>\n               </div>\n            </div>\n         </CommentInputItem>\n         <div className=\"blank_space\" />\n         {!list.length ? null :\n            list.filter((e, i) => {\n               if (e.sorts === 0) return list[i];\n            }).map((e, i) => (\n               <CommentItems\n                  key={i}\n                  e={e}\n                  csrf={csrf}\n                  list={list}\n                  getComment={getComment}\n                  topic={topic}\n                  postid={postid}\n                  setNewRequset={setNewRequset}\n               />))}\n         <div style={{ height: \"120px\" }} />\n      </CommentContainerComp>\n   );\n}\n\nexport default React.memo(CommentContainer);","/Users/junggri/Desktop/react-blog/client/src/component/Content/CommentItems.tsx",["447","448","449","450","451","452","453","454","455","456","457","458"],"import React, { useState } from \"react\";\nimport { CommentInputItem, CommentItmesComp } from \"../../styled-comp\";\nimport util from \"../../lib/axios\";\nimport createDOMPurify from \"dompurify\";\nimport { HiCode } from \"react-icons/hi\";\nimport { FiDelete } from \"react-icons/fi\";\n\ninterface ICommnet {\n   board: number\n   bgroup: number\n   parent: number\n   sorts: number\n   depth: number\n   cmt: string\n   writer: string\n   created: string\n}\n\ninterface ICmtItem {\n   e: ICommnet,\n   csrf: string,\n   list: ICommnet[]\n   getComment: any\n   topic: string\n   postid: string\n   setNewRequset: any\n}\n\nfunction CommentItem({ e, csrf, list, getComment, topic, postid, setNewRequset }: ICmtItem) {\n   const DOMPurify = typeof window === \"object\" ? createDOMPurify(window) : () => false;\n   const [reply, setReply] = useState(\"\");\n   const [depthReply, setDepthReply] = useState([]);\n   const [cmtData, setCmtData] = useState({ delete_cmt_user: \"\", delete_cmt_pwd: \"\" });\n   const [auth, setAuth] = useState({ cmt_user: \"\", cmt_pwd: \"\" });\n\n   const makeComment = (e: ICommnet) => ({\n      __html: typeof window === \"object\" ? (DOMPurify as any).sanitize(e.cmt) : null,\n   });\n\n\n   const isExistReply = (target: ICommnet) => {\n      if (!target.depth) {\n         return list.filter(e => e.bgroup === target.bgroup && e.depth > target.depth);\n      } else {\n         return list.filter(e => e.bgroup === target.bgroup && e.depth === target.depth + 1 && e.parent === target.board);\n      }\n   };\n\n   const onClickReply = (e: any) => {\n      const grp = parseInt(e.currentTarget.dataset.grp);\n      const dp = parseInt(e.currentTarget.dataset.dp);\n      const board = parseInt(e.currentTarget.dataset.board);\n      const _list: any = list.filter((e, i) => e.bgroup === grp && e.depth === dp + 1 && e.parent === board);//그룹그리고 댑쓰, 부모가 같은 것믇 만 가져옵니다.\n      if (!_list.length) {\n         e.currentTarget.nextSibling.nextSibling.nextSibling.classList.toggle(\"visible\");\n      } else {\n         e.currentTarget.nextSibling.nextSibling.classList.toggle(\"visible\");\n         e.currentTarget.nextSibling.classList.toggle(\"visible\");\n         if (e.currentTarget.nextSibling.nextSibling.nextSibling.classList.contains(\"visible\")) {\n            e.currentTarget.nextSibling.nextSibling.nextSibling.classList.remove(\"visible\");\n            e.currentTarget.nextSibling.nextSibling.textContent = \"댓글 달기\";\n         }\n      }\n      setDepthReply(_list);\n   };\n\n   const onClickDepthReplyBtn = (e: any) => {\n      e.currentTarget.nextSibling.classList.toggle(\"visible\");\n      e.currentTarget.nextSibling.classList.contains(\"visible\")\n         ? e.currentTarget.textContent = \"접기\"\n         : e.currentTarget.textContent = \"댓글 달기\";\n   };\n\n   const onChangeReply = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      setReply(e.target.value);\n   };\n\n\n   const onSubmitReply = async (e: any) => {\n      if (reply === \"\") return alert(\"댓글을 입력해주세요.\");\n      if (!auth.cmt_pwd || !auth.cmt_pwd) return alert(\"댓글을 작성하시려면 아이디와 비밀번호를 입력해주세요\");\n      const replyBox = e.currentTarget.parentNode.parentNode.parentNode;\n      replyBox.classList.remove(\"visible\");\n      const depth = e.currentTarget.dataset.dp;\n      const sort = e.currentTarget.dataset.sorts;\n      const grp = e.currentTarget.dataset.grp;\n      const bn = e.currentTarget.dataset.board;\n      const { data } = await util.saveReply(reply, Number(bn), Number(grp), Number(sort), Number(depth), topic, postid, auth.cmt_user, auth.cmt_pwd, csrf);\n      const _list: any = data.comment.filter(\n         (e: ICommnet) =>\n            e.bgroup === Number(grp)\n            && e.sorts >= Number(sort)\n            && e.parent === Number(bn)\n            && e.depth === Number(depth) + 1,\n      );\n      setDepthReply(_list);\n      setReply(\"\");\n      getComment(postid);\n      setAuth({ cmt_user: \"\", cmt_pwd: \"\" });\n   };\n\n   const onChangeAuth = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setAuth({\n         ...auth,\n         [e.currentTarget.name]: e.currentTarget.value,\n      });\n   };\n\n\n   const deleteComment = async (e: any) => {\n      const deleteArr: number[] = [];\n      const board = e.currentTarget.dataset.board;\n      const parent = e.currentTarget.dataset.pr;\n      deleteArr.push(Number(board));\n      e.currentTarget.parentNode.parentNode.parentNode.parentNode.style.display = \"none\";\n\n      function findDepth(board: number, parent: number) {\n         const _list = list.filter(e => e.parent === Number(board));\n         _list.forEach(e => {\n            deleteArr.push(e.board);\n            findDepth(Number(e.board), Number(e.parent));\n         });\n      }\n\n      findDepth(Number(board), Number(parent));\n      await util.deleteComment(cmtData.delete_cmt_user, cmtData.delete_cmt_pwd, board, topic, postid, deleteArr, csrf);\n      getComment(postid);\n      setNewRequset(true);\n   };\n\n   const showDeleteBox = (e: any) => {\n      e.currentTarget.nextSibling.classList.toggle(\"visible\");\n   };\n\n   const onChangeDelete = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setCmtData({\n         ...cmtData,\n         [e.currentTarget.name]: e.currentTarget.value,\n      });\n   };\n\n   return (\n      <CommentItmesComp depth={Number(e.depth) + 1} className={`depth` + (Number(e.depth) + 1)}>\n         <div className=\"cmt-whoami\">\n            <img src=\"/images/og.jpg\" alt=\"\" />\n            <div className=\"cmt-whoami-sub\">\n               <span className=\"cmt-writer\">{e.writer}</span>\n               <span className=\"cmt-created\">{e.created}</span>\n            </div>\n            <div className=\"cmt-delete-icons\" onClick={showDeleteBox}>\n               <FiDelete />\n            </div>\n            <div className=\"cmt-delete-box\">\n               <div className=\"cmt-delete-inputbox\">\n                  <input type=\"text\" name=\"delete_cmt_user\" value={cmtData.delete_cmt_user} placeholder=\"작성자\" onChange={onChangeDelete} />\n                  <input type=\"password\" name=\"delete_cmt_pwd\" value={cmtData.delete_cmt_pwd} placeholder=\"비밀번호\" onChange={onChangeDelete} />\n                  <div className=\"delete-btn\" onClick={deleteComment} data-pr={e.parent} data-grp={e.bgroup} data-dp={e.depth} data-board={e.board}>삭제하기</div>\n               </div>\n            </div>\n         </div>\n         <div className=\"cmt-content\" dangerouslySetInnerHTML={makeComment(e)} />\n         <div className=\"cmt-reply-box\">\n            <div className=\"cmt-btn-reply\" data-grp={e.bgroup} data-dp={e.depth} data-board={e.board} onClick={onClickReply}>\n               <HiCode className=\"reply-icons\" />\n               {!isExistReply(e).length ? <span>댓글달기</span> : <span>{isExistReply(e).length + \"개의 댓글\"}</span>}\n            </div>\n            <div className=\"reply-depth\">\n               {depthReply.map((e, i) => (\n                  <CommentItem\n                     key={i}\n                     e={e}\n                     csrf={csrf}\n                     list={list}\n                     getComment={getComment}\n                     topic={topic}\n                     postid={postid}\n                     setNewRequset={setNewRequset}\n                  />\n               ))}\n            </div>\n            <div className=\"depth-reply-btn\" onClick={onClickDepthReplyBtn}>댓글 달기</div>\n            <div className=\"depth-reply-box\">\n               <CommentInputItem>\n                  <textarea placeholder=\"댓글을 입력해주세요.\" value={reply} onChange={onChangeReply} />\n                  <div className=\"cmt-login\">\n                     <input type=\"text\" name=\"cmt_user\" value={auth.cmt_user} placeholder=\"이름\"\n                            onChange={onChangeAuth} />\n                     <input type=\"password\" name=\"cmt_pwd\" value={auth.cmt_pwd} placeholder=\"비밀번호\"\n                            onChange={onChangeAuth} />\n                     <div className=\"cmt-submit-btn\"\n                          data-grp={e.bgroup}\n                          data-sorts={e.sorts}\n                          data-dp={e.depth}\n                          data-board={e.board}\n                          onClick={onSubmitReply}>\n                        <span>답글달기</span>\n                     </div>\n                  </div>\n               </CommentInputItem>\n            </div>\n         </div>\n      </CommentItmesComp>\n   );\n}\n\nexport default React.memo(CommentItem);\n","/Users/junggri/Desktop/react-blog/client/src/component/Content/EntryPostsContainer.tsx",["459","460"],"import React from \"react\";\nimport { EntryPostsContainerComp, EntryPostsItemComp } from \"../../styled-comp\";\nimport { Link } from \"react-router-dom\";\nimport { IoColorWand } from \"react-icons/io5\";\nimport { MdDelete } from \"react-icons/md\";\nimport { FaRegComment } from \"react-icons/fa\";\nimport { IAllPost, IPostCommonProps } from \"../../modules/Posts/posts.interface\";\nimport isNew from \"../../lib/isNewPost\";\n\ninterface IEntryPostsContainer {\n   posts: IAllPost\n   onDelete: (event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void,\n   login: boolean,\n   csrf: string\n}\n\nconst EntryPostsContainer = ({ posts, onDelete, login, csrf }: IEntryPostsContainer) => {\n   if (!posts.data) return null;\n   const data = Object.values(posts.data).flat();\n   return (\n      <EntryPostsContainerComp>\n         {data.map((e: IPostCommonProps) => (\n            <EntryPostsItemComp key={e.uid}>\n               <span className=\"item-created\">\n                  <span className=\"ic-icons\">🗓 </span>\n                  {e.created}\n                  <Link to={`/tag/${e.topic}`}>\n                     <span className=\"topic_link\">{(e.topic).toUpperCase()}</span>\n                  </Link>\n                  {isNew(e.date) && <span className=\"post_is_new\">NEW</span>}\n               </span>\n               <Link to={`/topic/${e.topic}/${e.uid}`}>\n                  <div className=\"item-contentName\">\n                     <span>{e.content_name}</span>\n                  </div>\n               </Link>\n               <div className=\"item-detail\">{e.detail}</div>\n               {login &&\n               <div className=\"posts-admin-box\" data-id={e.uid} data-topic={e.topic}>\n                  <span className='posts-admin-modify'>\n                     <Link to={`/write?modify=${e.uid}&topic=${e.topic}`}><IoColorWand /></Link>\n                  </span>\n                  <span className='posts-admin-delete' onClick={onDelete}><MdDelete /></span>\n               </div>\n               }\n               <div className=\"content-cmt-box\">\n                  <FaRegComment className=\"content-cmt-icons\" />\n                  <span>{e.comment}</span>\n               </div>\n            </EntryPostsItemComp>\n         ))}\n         <div className=\"sidebar-copyright\">Copyright 2021. junggri All rights reserved.</div>\n      </EntryPostsContainerComp>\n   );\n};\n\nexport default (EntryPostsContainer);","/Users/junggri/Desktop/react-blog/client/src/component/Content/SpecificTopicContainer.tsx",["461","462","463","464","465"],"/Users/junggri/Desktop/react-blog/client/src/component/Content/TagsContainer.tsx",["466","467"],"import React from \"react\";\nimport { TagsContainerComp } from \"../../styled-comp\";\nimport { IAllPost, IPostCommonProps } from \"../../modules/Posts/posts.interface\";\nimport { Link } from \"react-router-dom\";\nimport { CgHashtag } from \"react-icons/cg\";\n\ninterface ITagsinterface {\n   Allposts: IAllPost\n}\n\nfunction TagsCotainer({ Allposts }: ITagsinterface) {\n   const set = new Set();\n   Allposts.data?.map((e: any) => set.add(e.topic));\n   const tags = Array.from(set);\n\n   function getLength<T extends IPostCommonProps, K>(data: T[] | null, key: K): number {\n      let count = 0;\n      if (data !== null && typeof key === \"string\") {\n         data.filter((e) => {\n            if (e.topic === key) count += 1;\n         });\n      }\n      return count;\n   }\n\n   if (!Allposts.data) return null;\n   return (\n      <TagsContainerComp>\n         <div className=\"tag-slo\">태그</div>\n         <div className=\"tags-box\">\n            {tags.map((e) => (\n               <Link to={`/tag/${e}`} key={e as string}>\n               <span className=\"tag-hash\">\n                  <CgHashtag className=\"hash-icon\" />\n                  <span>{e}({Allposts.data !== null && getLength(Allposts.data, e)})</span>\n               </span>\n               </Link>\n            ))}\n         </div>\n      </TagsContainerComp>\n   );\n}\n\nexport default TagsCotainer;","/Users/junggri/Desktop/react-blog/client/src/component/Home/TopMetaBar.tsx",["468","469"],"import React from \"react\";\nimport { TopMetaBarComp } from \"../../styled-comp\";\nimport { NavLink } from \"react-router-dom\";\n\n// import { isMobile } from \"react-device-detect\";\n\nfunction TopMetaBar({ match, count }: { match: any, count: any }) {\n   return (\n      <TopMetaBarComp>\n         <section className=\"topmetabar-list\">\n            <NavLink to=\"/\"\n                     className=\"metaItem\"\n                     exact={match.path === \"/\"}\n                     activeClassName=\"metaActive\">\n               <span className='tmb-icon'>🖥 </span>\n               <span>blog</span>\n            </NavLink>\n            <NavLink to=\"/about\"\n                     className=\"metaItem\"\n                     exact={match.path === \"/about\"}\n                     activeClassName=\"metaActive\">\n               <span className='tmb-icon'>🙋‍♂️ </span>\n               <span>about me</span>\n            </NavLink>\n         </section>\n         <section className=\"topmetabar-count\">\n            <div>\n               <span>전체</span>\n               <span className=\"topmetabar-countAll\">\n                  {count !== null\n                     ? <span>{count.data.totalsForAllResults[\"ga:users\"]}</span>\n                     : <span>로딩</span>}\n               </span>\n            </div>\n            <div>|</div>\n            <div>\n               <span>오늘의 방문자</span>\n               <span className=\"topmetabar-today\">\n                  {count !== null\n                     ? <span>{count.data.rows[count.data.rows.length - 1][1]}</span>\n                     : <span>로딩</span>}\n               </span>\n            </div>\n         </section>\n\n         {/*<div className=\"topmetabar-icons-box\">*/}\n         {/*   <GoMarkGithub className=\"icon-github\" onClick={() => {*/}\n         {/*      window.open(\"https://github.com/junggri\", \"_blank\");*/}\n         {/*   }} />*/}\n         {/*   <HiOutlineMail className=\"icon-mail\" onClick={() => {*/}\n         {/*      window.location.href = \"mailto:jjuu6933@naver.com\";*/}\n         {/*   }} />*/}\n         {/*   <Link to=\"/\">*/}\n         {/*      <CgHome className=\"icon-tohome\" />*/}\n         {/*   </Link>*/}\n         {/*</div>*/}\n      </TopMetaBarComp>\n   );\n}\n\nexport default React.memo(TopMetaBar);","/Users/junggri/Desktop/react-blog/client/src/component/Home/SideNavBar.tsx",["470","471"],"import React from \"react\";\nimport { SideBarComp, SideBarMetaDataComp, SideBarThunmbNailComp } from \"../../styled-comp\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\n\ninterface ISideBarNavContainer {\n   login: boolean\n   location: any\n   count: any\n}\n\n\nfunction SideBarNavContainer({ login, location, count }: ISideBarNavContainer) {\n   return (\n      <SideBarComp>\n         <SideBarThunmbNailComp src=\"/images/og.jpg\" />\n         <SideBarMetaDataComp>\n            <div className=\"sidebar-names\"><Link to=\"/\">junggri</Link></div>\n            <div className=\"sidebar-posi posi1\">deep work!</div>\n         </SideBarMetaDataComp>\n         <ul className=\"sidebar-item-list\">\n            <li><NavLink to=\"/post\" className={location.pathname === \"/\" ? \"active\" : \"post\"}>post</NavLink></li>\n            <li><NavLink to=\"/tag\">tags</NavLink></li>\n            <li><NavLink to=\"/about\">about</NavLink></li>\n            {/*<li><NavLink to=\"/portfolio\">포트폴리오</NavLink></li>*/}\n         </ul>\n         <div className=\"ga-count\">\n            <div>\n               <span>전체 방문자</span>\n               {count !== null\n                  ? <span className=\"count-num\">{count.data.totalsForAllResults[\"ga:users\"]}</span>\n                  : <AiOutlineLoading3Quarters className=\"loading-icon\" />}\n            </div>\n            <div>\n               <span>오늘의 방문자</span>\n               {count !== null\n                  ? <span className=\"count-num\">{count.data.rows[count.data.rows.length - 1][1]}</span>\n                  : <AiOutlineLoading3Quarters className=\"loading-icon\" />}\n            </div>\n         </div>\n         {login &&\n         <Link to=\"/write\">\n            <span className=\"write-article-btn\">새 글 쓰기</span>\n         </Link>\n         }\n         <div className=\"sidebar-divider\" />\n      </SideBarComp>\n   );\n}\n\nexport default React.memo(SideBarNavContainer);","/Users/junggri/Desktop/react-blog/client/src/component/Home/SideNavBarTopic.tsx",["472","473","474","475"],"import React from \"react\";\nimport { SideBarPostsContainerComp, SideBarPostsItemComp } from \"../../styled-comp\";\n\ninterface ISideBarNavContainer {\n   topic: any\n}\n\n\nfunction SideNavBarTopic({ topic }: ISideBarNavContainer) {\n   const onMakeIsNewPost = (date: string) => {\n      const date_diff = ((new Date() as any) - (new Date(date) as any)) / (24 * 3600 * 1000);\n      return Math.floor(date_diff) <= 2;\n   };\n   if (!topic.data) return null;\n\n   return (\n      <SideBarPostsContainerComp>\n         <div className=\"sidebar-list\">\n            <span>전체목록</span>\n            <span>({Object.values(topic.data).flat().length})</span>\n         </div>\n         {Object.keys(topic.data).map((e: string, i: number) => (\n            <SideBarPostsItemComp to={`/topic/${e}`} key={e}>\n               <div>\n                  <span className=\"topic_list_items\">{e}</span>\n                  <span className=\"topic_length\">({topic.data[e].length})</span>\n                  {(onMakeIsNewPost(topic.data[e][0].date)) && <span className=\"topic_is_new\">new</span>}\n               </div>\n            </SideBarPostsItemComp>\n         ))}\n      </SideBarPostsContainerComp>\n   );\n}\n\nexport default React.memo(SideNavBarTopic);","/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/WriteTopicName.tsx",["476","477"],"import React from \"react\";\n\nconst WriteTopicName = ({ onNameChange, value }: { onNameChange: any, value: string }) => {\n   const onChange = (e: any) => {\n      onNameChange(e.target.value);\n   };\n\n   return (\n      <>\n         <textarea name=\"content-title\" placeholder=\"제목\" className=\"content-title\" onChange={onChange} value={value} />\n      </>\n   );\n};\n\nexport default React.memo(WriteTopicName);","/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/PostsDetail.tsx",[],"/Users/junggri/Desktop/react-blog/client/src/component/TextEditor/SelectTopic.tsx",[],"/Users/junggri/Desktop/react-blog/client/src/component/About/AboutContainer.tsx",["478","479"],"/Users/junggri/Desktop/react-blog/client/src/config/textEditor.config.ts",["480","481","482"],"import hljs from \"highlight.js\";\n\nconst { Quill } = typeof window === \"object\" ? require(\"react-quill\") : () => false;\n\nhljs.configure({\n   languages: [\"javascript\", \"react\", \"typescript\", \"css\", \"html\", \"Node REPL\"],\n});\n\nexport const modules = {\n   syntax: {\n      highlight: (text: any) => hljs.highlightAuto(text).value,\n   },\n   toolbar: [\n      [{ font: [] }],\n      [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\n      [\"bold\", \"italic\", \"underline\", \"strike\"],\n      [\"blockquote\", \"code-block\"],\n      [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n      [{ align: [] }],\n      [{ list: \"ordered\" }, { list: \"bullet\" }, { indent: \"-1\" }, { indent: \"+1\" }],\n      [\"link\", \"image\", \"video\"],\n   ],\n};\n\n\nexport const formats = [\"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\",\n   \"code-block\", \"color\", \"background\", \"align\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"blockquote\", \"video\", \"insert\"];\n\nif (typeof window === \"object\") {\n   const bold = Quill.import(\"formats/bold\");\n   bold.tagName = \"b\"; // Quill uses <strong> by default\n   Quill.register(bold, true);\n\n   const italic = Quill.import(\"formats/italic\");\n   italic.tagName = \"i\"; // Quill uses <em> by default\n   Quill.register(italic, true);\n}\n","/Users/junggri/Desktop/react-blog/client/src/lib/isNewPost.ts",["483","484","485"],"export default function isNew(date: string) {\n   const date_diff = ((new Date() as any) - (new Date(date) as any)) / (24 * 3600 * 1000);\n   return Math.floor(date_diff) < 1;\n}","/Users/junggri/Desktop/react-blog/client/src/useHooks/useTopic.tsx",["486"],"import { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../modules\";\nimport { useCallback } from \"react\";\nimport { onReqTopicsName } from \"../modules/Topic\";\n\nexport default function useTopic() {\n   const dispatch = useDispatch();\n   const { topic, loading, error } = useSelector((state: RootState) => state.topic);\n\n   const requestTopic = useCallback(() => {\n      dispatch(onReqTopicsName());\n   }, [dispatch]);\n\n\n   return { topic, loading, error, requestTopic };\n}","/Users/junggri/Desktop/react-blog/client/src/useHooks/useTextEdit.tsx",["487","488"],"import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../modules\";\nimport { onSetContent, onSetContentName, onSetDetail, onSetKindOfPosts, onSetTempData, onSetThumbNail, onSetTopic } from \"../modules/TextEditor\";\nimport { ITextInitialProps } from \"../modules/TextEditor/textEdit.interface\";\n\nfunction useTextEdit() {\n   const data = useSelector((state: RootState) => state.textEdit);\n   const dispatch = useDispatch();\n\n   const setContent = useCallback((content: string) => {\n      dispatch(onSetContent(content));\n   }, [dispatch]);\n\n   const setContentName = useCallback((contentName: string) => {\n      dispatch(onSetContentName(contentName));\n   }, [dispatch]);\n\n   const setTopic = useCallback((topic: string) => {\n      dispatch(onSetTopic(topic));\n   }, [dispatch]);\n\n   const setKindOfPosts = useCallback((kindOf: string) => {\n      dispatch(onSetKindOfPosts(kindOf));\n   }, [dispatch]);\n\n   const setDetail = useCallback((detail: string) => {\n      dispatch(onSetDetail(detail));\n   }, [dispatch]);\n\n   const setThumbnail = useCallback((thumbnail: string) => {\n      dispatch(onSetThumbNail(thumbnail));\n   }, [dispatch]);\n\n   const setTempData = useCallback((data: ITextInitialProps) => {\n      dispatch(onSetTempData(data));\n   }, [dispatch]);\n\n   return { data, setContent, setContentName, setTopic, setKindOfPosts, setDetail, setThumbnail, setTempData };\n}\n\nexport default useTextEdit;","/Users/junggri/Desktop/react-blog/client/src/useHooks/useComment.tsx",["489","490","491","492"],"import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../modules\";\nimport { onGetComment } from \"../modules/Comment\";\n\nexport default function useComment() {\n   const { list, loading, error } = useSelector((state: RootState) => state.comment);\n   const dispatch = useDispatch();\n\n   const getComment = useCallback((cmt_id: string) => {\n      dispatch(onGetComment(cmt_id));\n   }, [dispatch]);\n\n   return { list, getComment };\n}",[],"/Users/junggri/Desktop/react-blog/client/src/styles/GlobalStyles.tsx",[],{"ruleId":"493","severity":1,"message":"494","line":3,"column":25,"nodeType":"495","messageId":"496","endLine":3,"endColumn":57},{"ruleId":"493","severity":1,"message":"494","line":26,"column":8,"nodeType":"497","messageId":"496","endLine":26,"endColumn":42},{"ruleId":"493","severity":1,"message":"494","line":132,"column":8,"nodeType":"497","messageId":"496","endLine":132,"endColumn":29},{"ruleId":"498","severity":1,"message":"499","line":17,"column":42,"nodeType":"500","messageId":"501","endLine":17,"endColumn":45,"suggestions":"502"},{"ruleId":"493","severity":1,"message":"494","line":7,"column":1,"nodeType":"497","messageId":"496","endLine":7,"endColumn":15},{"ruleId":"493","severity":1,"message":"503","line":1,"column":26,"nodeType":"504","messageId":"505","endLine":1,"endColumn":36},{"ruleId":"506","severity":1,"message":"507","line":1,"column":26,"nodeType":"504","messageId":"508","endLine":1,"endColumn":36},{"ruleId":"498","severity":1,"message":"499","line":1,"column":33,"nodeType":"500","messageId":"501","endLine":1,"endColumn":36,"suggestions":"509"},{"ruleId":"493","severity":1,"message":"510","line":1,"column":42,"nodeType":"504","messageId":"505","endLine":1,"endColumn":51},{"ruleId":"498","severity":1,"message":"499","line":1,"column":48,"nodeType":"500","messageId":"501","endLine":1,"endColumn":51,"suggestions":"511"},{"ruleId":"493","severity":1,"message":"494","line":1,"column":56,"nodeType":"495","messageId":"496","endLine":1,"endColumn":72},{"ruleId":"493","severity":1,"message":"512","line":1,"column":57,"nodeType":"504","messageId":"505","endLine":1,"endColumn":68},{"ruleId":"498","severity":1,"message":"499","line":1,"column":65,"nodeType":"500","messageId":"501","endLine":1,"endColumn":68,"suggestions":"513"},{"ruleId":"493","severity":1,"message":"494","line":6,"column":1,"nodeType":"497","messageId":"496","endLine":6,"endColumn":33},{"ruleId":"493","severity":1,"message":"514","line":6,"column":16,"nodeType":"515","messageId":"516","endLine":6,"endColumn":32},{"ruleId":"498","severity":1,"message":"499","line":6,"column":29,"nodeType":"500","messageId":"501","endLine":6,"endColumn":32,"suggestions":"517"},{"ruleId":"498","severity":1,"message":"499","line":4,"column":16,"nodeType":"500","messageId":"501","endLine":4,"endColumn":19,"suggestions":"518"},{"ruleId":"493","severity":1,"message":"494","line":9,"column":14,"nodeType":"495","messageId":"496","endLine":9,"endColumn":32},{"ruleId":"493","severity":1,"message":"514","line":9,"column":15,"nodeType":"515","messageId":"516","endLine":9,"endColumn":28},{"ruleId":"498","severity":1,"message":"499","line":9,"column":25,"nodeType":"500","messageId":"501","endLine":9,"endColumn":28,"suggestions":"519"},{"ruleId":"506","severity":1,"message":"520","line":15,"column":10,"nodeType":"504","messageId":"508","endLine":15,"endColumn":19},{"ruleId":"493","severity":1,"message":"494","line":6,"column":4,"nodeType":"521","messageId":"496","endLine":6,"endColumn":26},{"ruleId":"493","severity":1,"message":"494","line":21,"column":4,"nodeType":"521","messageId":"496","endLine":21,"endColumn":18},{"ruleId":"493","severity":1,"message":"494","line":28,"column":4,"nodeType":"521","messageId":"496","endLine":28,"endColumn":16},{"ruleId":"493","severity":1,"message":"494","line":35,"column":4,"nodeType":"521","messageId":"496","endLine":35,"endColumn":43},{"ruleId":"493","severity":1,"message":"522","line":35,"column":33,"nodeType":"504","messageId":"505","endLine":35,"endColumn":42},{"ruleId":"498","severity":1,"message":"499","line":35,"column":39,"nodeType":"500","messageId":"501","endLine":35,"endColumn":42,"suggestions":"523"},{"ruleId":"493","severity":1,"message":"494","line":44,"column":4,"nodeType":"521","messageId":"496","endLine":44,"endColumn":18},{"ruleId":"493","severity":1,"message":"494","line":51,"column":4,"nodeType":"521","messageId":"496","endLine":51,"endColumn":52},{"ruleId":"493","severity":1,"message":"494","line":60,"column":4,"nodeType":"521","messageId":"496","endLine":60,"endColumn":67},{"ruleId":"493","severity":1,"message":"494","line":69,"column":4,"nodeType":"521","messageId":"496","endLine":69,"endColumn":69},{"ruleId":"493","severity":1,"message":"494","line":78,"column":4,"nodeType":"521","messageId":"496","endLine":78,"endColumn":69},{"ruleId":"493","severity":1,"message":"494","line":87,"column":4,"nodeType":"521","messageId":"496","endLine":87,"endColumn":33},{"ruleId":"493","severity":1,"message":"494","line":95,"column":4,"nodeType":"521","messageId":"496","endLine":95,"endColumn":17},{"ruleId":"493","severity":1,"message":"494","line":102,"column":4,"nodeType":"521","messageId":"496","endLine":102,"endColumn":22},{"ruleId":"493","severity":1,"message":"494","line":109,"column":4,"nodeType":"521","messageId":"496","endLine":109,"endColumn":37},{"ruleId":"493","severity":1,"message":"494","line":116,"column":4,"nodeType":"521","messageId":"496","endLine":116,"endColumn":53},{"ruleId":"493","severity":1,"message":"494","line":123,"column":4,"nodeType":"521","messageId":"496","endLine":123,"endColumn":49},{"ruleId":"493","severity":1,"message":"494","line":132,"column":4,"nodeType":"521","messageId":"496","endLine":132,"endColumn":57},{"ruleId":"493","severity":1,"message":"494","line":141,"column":4,"nodeType":"521","messageId":"496","endLine":141,"endColumn":46},{"ruleId":"493","severity":1,"message":"494","line":150,"column":4,"nodeType":"521","messageId":"496","endLine":150,"endColumn":50},{"ruleId":"493","severity":1,"message":"494","line":159,"column":4,"nodeType":"521","messageId":"496","endLine":159,"endColumn":40},{"ruleId":"493","severity":1,"message":"522","line":159,"column":15,"nodeType":"504","messageId":"505","endLine":159,"endColumn":24},{"ruleId":"498","severity":1,"message":"499","line":159,"column":21,"nodeType":"500","messageId":"501","endLine":159,"endColumn":24,"suggestions":"524"},{"ruleId":"493","severity":1,"message":"494","line":168,"column":4,"nodeType":"521","messageId":"496","endLine":168,"endColumn":30},{"ruleId":"493","severity":1,"message":"494","line":176,"column":4,"nodeType":"521","messageId":"496","endLine":176,"endColumn":19},{"ruleId":"493","severity":1,"message":"494","line":183,"column":4,"nodeType":"521","messageId":"496","endLine":183,"endColumn":30},{"ruleId":"493","severity":1,"message":"494","line":189,"column":4,"nodeType":"521","messageId":"496","endLine":189,"endColumn":136},{"ruleId":"493","severity":1,"message":"494","line":198,"column":4,"nodeType":"521","messageId":"496","endLine":198,"endColumn":158},{"ruleId":"493","severity":1,"message":"494","line":207,"column":4,"nodeType":"521","messageId":"496","endLine":207,"endColumn":129},{"ruleId":"506","severity":1,"message":"525","line":3,"column":8,"nodeType":"504","messageId":"508","endLine":3,"endColumn":13},{"ruleId":"498","severity":1,"message":"499","line":13,"column":10,"nodeType":"500","messageId":"501","endLine":13,"endColumn":13,"suggestions":"526"},{"ruleId":"498","severity":1,"message":"499","line":14,"column":9,"nodeType":"500","messageId":"501","endLine":14,"endColumn":12,"suggestions":"527"},{"ruleId":"498","severity":1,"message":"499","line":18,"column":9,"nodeType":"500","messageId":"501","endLine":18,"endColumn":12,"suggestions":"528"},{"ruleId":"498","severity":1,"message":"499","line":22,"column":13,"nodeType":"500","messageId":"501","endLine":22,"endColumn":16,"suggestions":"529"},{"ruleId":"506","severity":1,"message":"530","line":33,"column":7,"nodeType":"504","messageId":"508","endLine":33,"endColumn":22},{"ruleId":"506","severity":1,"message":"531","line":36,"column":11,"nodeType":"504","messageId":"508","endLine":36,"endColumn":30},{"ruleId":"498","severity":1,"message":"499","line":419,"column":53,"nodeType":"500","messageId":"501","endLine":419,"endColumn":56,"suggestions":"532"},{"ruleId":"498","severity":1,"message":"499","line":1105,"column":45,"nodeType":"500","messageId":"501","endLine":1105,"endColumn":48,"suggestions":"533"},{"ruleId":"506","severity":1,"message":"525","line":1,"column":8,"nodeType":"504","messageId":"508","endLine":1,"endColumn":13},{"ruleId":"493","severity":1,"message":"494","line":5,"column":1,"nodeType":"497","messageId":"496","endLine":5,"endColumn":16},{"ruleId":"498","severity":1,"message":"499","line":8,"column":21,"nodeType":"500","messageId":"501","endLine":8,"endColumn":24,"suggestions":"534"},{"ruleId":"498","severity":1,"message":"499","line":20,"column":54,"nodeType":"500","messageId":"501","endLine":20,"endColumn":57,"suggestions":"535"},{"ruleId":"498","severity":1,"message":"499","line":20,"column":66,"nodeType":"500","messageId":"501","endLine":20,"endColumn":69,"suggestions":"536"},{"ruleId":"498","severity":1,"message":"499","line":21,"column":27,"nodeType":"500","messageId":"501","endLine":21,"endColumn":30,"suggestions":"537"},{"ruleId":"493","severity":1,"message":"494","line":6,"column":1,"nodeType":"497","messageId":"496","endLine":6,"endColumn":48},{"ruleId":"493","severity":1,"message":"514","line":6,"column":21,"nodeType":"515","messageId":"516","endLine":6,"endColumn":47},{"ruleId":"498","severity":1,"message":"499","line":6,"column":44,"nodeType":"500","messageId":"501","endLine":6,"endColumn":47,"suggestions":"538"},{"ruleId":"493","severity":1,"message":"494","line":4,"column":1,"nodeType":"497","messageId":"496","endLine":4,"endColumn":31},{"ruleId":"493","severity":1,"message":"514","line":4,"column":16,"nodeType":"515","messageId":"516","endLine":4,"endColumn":30},{"ruleId":"498","severity":1,"message":"499","line":4,"column":27,"nodeType":"500","messageId":"501","endLine":4,"endColumn":30,"suggestions":"539"},{"ruleId":"493","severity":1,"message":"494","line":13,"column":1,"nodeType":"497","messageId":"496","endLine":13,"endColumn":44},{"ruleId":"493","severity":1,"message":"514","line":13,"column":19,"nodeType":"515","messageId":"516","endLine":13,"endColumn":43},{"ruleId":"498","severity":1,"message":"499","line":13,"column":40,"nodeType":"500","messageId":"501","endLine":13,"endColumn":43,"suggestions":"540"},{"ruleId":"541","severity":1,"message":"542","line":40,"column":7,"nodeType":"543","endLine":40,"endColumn":9,"suggestions":"544"},{"ruleId":"493","severity":1,"message":"494","line":9,"column":25,"nodeType":"495","messageId":"496","endLine":9,"endColumn":30},{"ruleId":"493","severity":1,"message":"494","line":10,"column":32,"nodeType":"495","messageId":"496","endLine":10,"endColumn":51},{"ruleId":"498","severity":1,"message":"499","line":10,"column":42,"nodeType":"500","messageId":"501","endLine":10,"endColumn":45,"suggestions":"545"},{"ruleId":"493","severity":1,"message":"494","line":11,"column":30,"nodeType":"495","messageId":"496","endLine":11,"endColumn":43},{"ruleId":"493","severity":1,"message":"494","line":14,"column":38,"nodeType":"495","messageId":"496","endLine":14,"endColumn":77},{"ruleId":"493","severity":1,"message":"546","line":14,"column":45,"nodeType":"504","messageId":"505","endLine":14,"endColumn":58},{"ruleId":"498","severity":1,"message":"499","line":14,"column":55,"nodeType":"500","messageId":"501","endLine":14,"endColumn":58,"suggestions":"547"},{"ruleId":"493","severity":1,"message":"548","line":14,"column":60,"nodeType":"504","messageId":"505","endLine":14,"endColumn":73},{"ruleId":"506","severity":1,"message":"549","line":14,"column":60,"nodeType":"504","messageId":"508","endLine":14,"endColumn":73},{"ruleId":"498","severity":1,"message":"499","line":14,"column":70,"nodeType":"500","messageId":"501","endLine":14,"endColumn":73,"suggestions":"550"},{"ruleId":"493","severity":1,"message":"494","line":31,"column":16,"nodeType":"497","messageId":"496","endLine":31,"endColumn":93},{"ruleId":"493","severity":1,"message":"494","line":13,"column":29,"nodeType":"495","messageId":"496","endLine":13,"endColumn":50},{"ruleId":"493","severity":1,"message":"494","line":15,"column":29,"nodeType":"495","messageId":"496","endLine":15,"endColumn":50},{"ruleId":"493","severity":1,"message":"494","line":17,"column":29,"nodeType":"495","messageId":"496","endLine":17,"endColumn":34},{"ruleId":"493","severity":1,"message":"494","line":18,"column":36,"nodeType":"495","messageId":"496","endLine":18,"endColumn":53},{"ruleId":"493","severity":1,"message":"551","line":18,"column":37,"nodeType":"504","messageId":"505","endLine":18,"endColumn":49},{"ruleId":"498","severity":1,"message":"499","line":18,"column":46,"nodeType":"500","messageId":"501","endLine":18,"endColumn":49,"suggestions":"552"},{"ruleId":"493","severity":1,"message":"494","line":19,"column":33,"nodeType":"495","messageId":"496","endLine":19,"endColumn":46},{"ruleId":"493","severity":1,"message":"494","line":25,"column":31,"nodeType":"495","messageId":"496","endLine":25,"endColumn":55},{"ruleId":"493","severity":1,"message":"546","line":25,"column":38,"nodeType":"504","messageId":"505","endLine":25,"endColumn":51},{"ruleId":"498","severity":1,"message":"499","line":25,"column":48,"nodeType":"500","messageId":"501","endLine":25,"endColumn":51,"suggestions":"553"},{"ruleId":"493","severity":1,"message":"494","line":14,"column":29,"nodeType":"495","messageId":"496","endLine":14,"endColumn":49},{"ruleId":"493","severity":1,"message":"494","line":15,"column":33,"nodeType":"495","messageId":"496","endLine":15,"endColumn":57},{"ruleId":"493","severity":1,"message":"494","line":16,"column":27,"nodeType":"495","messageId":"496","endLine":16,"endColumn":45},{"ruleId":"493","severity":1,"message":"494","line":17,"column":33,"nodeType":"495","messageId":"496","endLine":17,"endColumn":57},{"ruleId":"493","severity":1,"message":"494","line":18,"column":28,"nodeType":"495","messageId":"496","endLine":18,"endColumn":47},{"ruleId":"493","severity":1,"message":"494","line":19,"column":31,"nodeType":"495","messageId":"496","endLine":19,"endColumn":53},{"ruleId":"493","severity":1,"message":"494","line":20,"column":30,"nodeType":"495","messageId":"496","endLine":20,"endColumn":58},{"ruleId":"493","severity":1,"message":"494","line":10,"column":27,"nodeType":"495","messageId":"496","endLine":10,"endColumn":32},{"ruleId":"493","severity":1,"message":"494","line":11,"column":34,"nodeType":"495","messageId":"496","endLine":11,"endColumn":53},{"ruleId":"493","severity":1,"message":"494","line":12,"column":32,"nodeType":"495","messageId":"496","endLine":12,"endColumn":45},{"ruleId":"493","severity":1,"message":"494","line":21,"column":46,"nodeType":"495","messageId":"496","endLine":21,"endColumn":70},{"ruleId":"493","severity":1,"message":"546","line":21,"column":53,"nodeType":"504","messageId":"505","endLine":21,"endColumn":66},{"ruleId":"498","severity":1,"message":"499","line":21,"column":63,"nodeType":"500","messageId":"501","endLine":21,"endColumn":66,"suggestions":"554"},{"ruleId":"506","severity":1,"message":"525","line":1,"column":8,"nodeType":"504","messageId":"508","endLine":1,"endColumn":13},{"ruleId":"493","severity":1,"message":"494","line":6,"column":16,"nodeType":"497","messageId":"496","endLine":6,"endColumn":36},{"ruleId":"493","severity":1,"message":"494","line":8,"column":16,"nodeType":"497","messageId":"496","endLine":8,"endColumn":35},{"ruleId":"506","severity":1,"message":"525","line":1,"column":8,"nodeType":"504","messageId":"508","endLine":1,"endColumn":13},{"ruleId":"493","severity":1,"message":"494","line":5,"column":1,"nodeType":"497","messageId":"496","endLine":5,"endColumn":21},{"ruleId":"541","severity":1,"message":"555","line":12,"column":7,"nodeType":"543","endLine":12,"endColumn":9,"suggestions":"556"},{"ruleId":"493","severity":1,"message":"494","line":10,"column":13,"nodeType":"495","messageId":"496","endLine":10,"endColumn":37},{"ruleId":"493","severity":1,"message":"494","line":16,"column":13,"nodeType":"495","messageId":"496","endLine":16,"endColumn":34},{"ruleId":"493","severity":1,"message":"494","line":22,"column":13,"nodeType":"495","messageId":"496","endLine":22,"endColumn":30},{"ruleId":"493","severity":1,"message":"551","line":22,"column":14,"nodeType":"504","messageId":"505","endLine":22,"endColumn":26},{"ruleId":"498","severity":1,"message":"499","line":22,"column":23,"nodeType":"500","messageId":"501","endLine":22,"endColumn":26,"suggestions":"557"},{"ruleId":"493","severity":1,"message":"494","line":28,"column":11,"nodeType":"495","messageId":"496","endLine":28,"endColumn":28},{"ruleId":"493","severity":1,"message":"494","line":36,"column":28,"nodeType":"495","messageId":"496","endLine":36,"endColumn":54},{"ruleId":"493","severity":1,"message":"558","line":36,"column":43,"nodeType":"504","messageId":"505","endLine":36,"endColumn":50},{"ruleId":"498","severity":1,"message":"499","line":36,"column":47,"nodeType":"500","messageId":"501","endLine":36,"endColumn":50,"suggestions":"559"},{"ruleId":"498","severity":1,"message":"499","line":38,"column":62,"nodeType":"500","messageId":"501","endLine":38,"endColumn":65,"suggestions":"560"},{"ruleId":"493","severity":1,"message":"494","line":59,"column":8,"nodeType":"497","messageId":"496","endLine":59,"endColumn":76},{"ruleId":"498","severity":1,"message":"499","line":61,"column":19,"nodeType":"500","messageId":"501","endLine":61,"endColumn":22,"suggestions":"561"},{"ruleId":"493","severity":1,"message":"494","line":15,"column":26,"nodeType":"495","messageId":"496","endLine":15,"endColumn":31},{"ruleId":"493","severity":1,"message":"494","line":19,"column":30,"nodeType":"495","messageId":"496","endLine":19,"endColumn":35},{"ruleId":"493","severity":1,"message":"494","line":22,"column":26,"nodeType":"495","messageId":"496","endLine":22,"endColumn":31},{"ruleId":"493","severity":1,"message":"494","line":26,"column":34,"nodeType":"495","messageId":"496","endLine":26,"endColumn":53},{"ruleId":"498","severity":1,"message":"499","line":26,"column":44,"nodeType":"500","messageId":"501","endLine":26,"endColumn":47,"suggestions":"562"},{"ruleId":"493","severity":1,"message":"494","line":31,"column":31,"nodeType":"495","messageId":"496","endLine":31,"endColumn":44},{"ruleId":"493","severity":1,"message":"494","line":36,"column":30,"nodeType":"495","messageId":"496","endLine":36,"endColumn":35},{"ruleId":"493","severity":1,"message":"494","line":40,"column":37,"nodeType":"495","messageId":"496","endLine":40,"endColumn":56},{"ruleId":"498","severity":1,"message":"499","line":40,"column":47,"nodeType":"500","messageId":"501","endLine":40,"endColumn":50,"suggestions":"563"},{"ruleId":"493","severity":1,"message":"494","line":45,"column":35,"nodeType":"495","messageId":"496","endLine":45,"endColumn":48},{"ruleId":"493","severity":1,"message":"494","line":50,"column":34,"nodeType":"495","messageId":"496","endLine":50,"endColumn":39},{"ruleId":"493","severity":1,"message":"494","line":54,"column":41,"nodeType":"495","messageId":"496","endLine":54,"endColumn":60},{"ruleId":"498","severity":1,"message":"499","line":54,"column":51,"nodeType":"500","messageId":"501","endLine":54,"endColumn":54,"suggestions":"564"},{"ruleId":"493","severity":1,"message":"494","line":59,"column":39,"nodeType":"495","messageId":"496","endLine":59,"endColumn":52},{"ruleId":"493","severity":1,"message":"494","line":3,"column":16,"nodeType":"497","messageId":"496","endLine":3,"endColumn":60},{"ruleId":"493","severity":1,"message":"494","line":6,"column":26,"nodeType":"495","messageId":"496","endLine":6,"endColumn":47},{"ruleId":"493","severity":1,"message":"514","line":6,"column":27,"nodeType":"515","messageId":"516","endLine":6,"endColumn":43},{"ruleId":"498","severity":1,"message":"499","line":6,"column":40,"nodeType":"500","messageId":"501","endLine":6,"endColumn":43,"suggestions":"565"},{"ruleId":"498","severity":1,"message":"499","line":7,"column":26,"nodeType":"500","messageId":"501","endLine":7,"endColumn":29,"suggestions":"566"},{"ruleId":"498","severity":1,"message":"499","line":11,"column":30,"nodeType":"500","messageId":"501","endLine":11,"endColumn":33,"suggestions":"567"},{"ruleId":"493","severity":1,"message":"494","line":17,"column":29,"nodeType":"495","messageId":"496","endLine":17,"endColumn":46},{"ruleId":"493","severity":1,"message":"568","line":17,"column":30,"nodeType":"504","messageId":"505","endLine":17,"endColumn":42},{"ruleId":"498","severity":1,"message":"499","line":17,"column":39,"nodeType":"500","messageId":"501","endLine":17,"endColumn":42,"suggestions":"569"},{"ruleId":"498","severity":1,"message":"499","line":18,"column":26,"nodeType":"500","messageId":"501","endLine":18,"endColumn":29,"suggestions":"570"},{"ruleId":"493","severity":1,"message":"494","line":18,"column":16,"nodeType":"495","messageId":"496","endLine":18,"endColumn":47},{"ruleId":"493","severity":1,"message":"514","line":18,"column":17,"nodeType":"515","messageId":"516","endLine":18,"endColumn":43},{"ruleId":"498","severity":1,"message":"499","line":18,"column":40,"nodeType":"500","messageId":"501","endLine":18,"endColumn":43,"suggestions":"571"},{"ruleId":"498","severity":1,"message":"499","line":21,"column":23,"nodeType":"500","messageId":"501","endLine":21,"endColumn":26,"suggestions":"572"},{"ruleId":"498","severity":1,"message":"499","line":64,"column":53,"nodeType":"500","messageId":"501","endLine":64,"endColumn":56,"suggestions":"573"},{"ruleId":"506","severity":1,"message":"574","line":95,"column":35,"nodeType":"504","messageId":"508","endLine":95,"endColumn":47},{"ruleId":"498","severity":1,"message":"499","line":95,"column":44,"nodeType":"500","messageId":"501","endLine":95,"endColumn":47,"suggestions":"575"},{"ruleId":"506","severity":1,"message":"576","line":95,"column":49,"nodeType":"504","messageId":"508","endLine":95,"endColumn":59},{"ruleId":"498","severity":1,"message":"499","line":95,"column":56,"nodeType":"500","messageId":"501","endLine":95,"endColumn":59,"suggestions":"577"},{"ruleId":"506","severity":1,"message":"578","line":95,"column":61,"nodeType":"504","messageId":"508","endLine":95,"endColumn":72},{"ruleId":"498","severity":1,"message":"499","line":95,"column":69,"nodeType":"500","messageId":"501","endLine":95,"endColumn":72,"suggestions":"579"},{"ruleId":"506","severity":1,"message":"580","line":95,"column":74,"nodeType":"504","messageId":"508","endLine":95,"endColumn":85},{"ruleId":"498","severity":1,"message":"499","line":95,"column":82,"nodeType":"500","messageId":"501","endLine":95,"endColumn":85,"suggestions":"581"},{"ruleId":"493","severity":1,"message":"494","line":6,"column":24,"nodeType":"495","messageId":"496","endLine":6,"endColumn":84},{"ruleId":"498","severity":1,"message":"499","line":15,"column":38,"nodeType":"500","messageId":"501","endLine":15,"endColumn":41,"suggestions":"582"},{"ruleId":"498","severity":1,"message":"499","line":6,"column":86,"nodeType":"500","messageId":"501","endLine":6,"endColumn":89,"suggestions":"583"},{"ruleId":"498","severity":1,"message":"499","line":7,"column":18,"nodeType":"500","messageId":"501","endLine":7,"endColumn":21,"suggestions":"584"},{"ruleId":"498","severity":1,"message":"499","line":9,"column":34,"nodeType":"500","messageId":"501","endLine":9,"endColumn":37,"suggestions":"585"},{"ruleId":"493","severity":1,"message":"494","line":18,"column":1,"nodeType":"497","messageId":"496","endLine":18,"endColumn":40},{"ruleId":"493","severity":1,"message":"514","line":18,"column":25,"nodeType":"515","messageId":"516","endLine":18,"endColumn":39},{"ruleId":"498","severity":1,"message":"499","line":18,"column":36,"nodeType":"500","messageId":"501","endLine":18,"endColumn":39,"suggestions":"586"},{"ruleId":"498","severity":1,"message":"499","line":35,"column":58,"nodeType":"500","messageId":"501","endLine":35,"endColumn":61,"suggestions":"587"},{"ruleId":"541","severity":1,"message":"588","line":24,"column":7,"nodeType":"543","endLine":24,"endColumn":15,"suggestions":"589"},{"ruleId":"498","severity":1,"message":"499","line":38,"column":31,"nodeType":"500","messageId":"501","endLine":38,"endColumn":34,"suggestions":"590"},{"ruleId":"498","severity":1,"message":"499","line":23,"column":16,"nodeType":"500","messageId":"501","endLine":23,"endColumn":19,"suggestions":"591"},{"ruleId":"498","severity":1,"message":"499","line":26,"column":19,"nodeType":"500","messageId":"501","endLine":26,"endColumn":22,"suggestions":"592"},{"ruleId":"498","severity":1,"message":"499","line":37,"column":58,"nodeType":"500","messageId":"501","endLine":37,"endColumn":61,"suggestions":"593"},{"ruleId":"498","severity":1,"message":"499","line":49,"column":29,"nodeType":"500","messageId":"501","endLine":49,"endColumn":32,"suggestions":"594"},{"ruleId":"498","severity":1,"message":"499","line":53,"column":20,"nodeType":"500","messageId":"501","endLine":53,"endColumn":23,"suggestions":"595"},{"ruleId":"506","severity":1,"message":"596","line":53,"column":42,"nodeType":"504","messageId":"508","endLine":53,"endColumn":43},{"ruleId":"498","severity":1,"message":"499","line":67,"column":37,"nodeType":"500","messageId":"501","endLine":67,"endColumn":40,"suggestions":"597"},{"ruleId":"498","severity":1,"message":"499","line":79,"column":36,"nodeType":"500","messageId":"501","endLine":79,"endColumn":39,"suggestions":"598"},{"ruleId":"498","severity":1,"message":"499","line":89,"column":20,"nodeType":"500","messageId":"501","endLine":89,"endColumn":23,"suggestions":"599"},{"ruleId":"498","severity":1,"message":"499","line":110,"column":36,"nodeType":"500","messageId":"501","endLine":110,"endColumn":39,"suggestions":"600"},{"ruleId":"506","severity":1,"message":"601","line":117,"column":41,"nodeType":"504","messageId":"508","endLine":117,"endColumn":55},{"ruleId":"498","severity":1,"message":"499","line":131,"column":30,"nodeType":"500","messageId":"501","endLine":131,"endColumn":33,"suggestions":"602"},{"ruleId":"493","severity":1,"message":"494","line":17,"column":29,"nodeType":"495","messageId":"496","endLine":17,"endColumn":88},{"ruleId":"506","severity":1,"message":"603","line":17,"column":56,"nodeType":"504","messageId":"508","endLine":17,"endColumn":60},{"ruleId":"498","severity":1,"message":"499","line":13,"column":11,"nodeType":"500","messageId":"501","endLine":13,"endColumn":14,"suggestions":"604"},{"ruleId":"498","severity":1,"message":"499","line":16,"column":17,"nodeType":"500","messageId":"501","endLine":16,"endColumn":20,"suggestions":"605"},{"ruleId":"498","severity":1,"message":"499","line":17,"column":14,"nodeType":"500","messageId":"501","endLine":17,"endColumn":17,"suggestions":"606"},{"ruleId":"493","severity":1,"message":"494","line":20,"column":1,"nodeType":"497","messageId":"496","endLine":20,"endColumn":105},{"ruleId":"541","severity":1,"message":"607","line":28,"column":7,"nodeType":"543","endLine":28,"endColumn":15,"suggestions":"608"},{"ruleId":"493","severity":1,"message":"494","line":11,"column":1,"nodeType":"497","messageId":"496","endLine":11,"endColumn":52},{"ruleId":"498","severity":1,"message":"499","line":13,"column":27,"nodeType":"500","messageId":"501","endLine":13,"endColumn":30,"suggestions":"609"},{"ruleId":"498","severity":1,"message":"499","line":7,"column":48,"nodeType":"500","messageId":"501","endLine":7,"endColumn":51,"suggestions":"610"},{"ruleId":"498","severity":1,"message":"499","line":7,"column":60,"nodeType":"500","messageId":"501","endLine":7,"endColumn":63,"suggestions":"611"},{"ruleId":"498","severity":1,"message":"499","line":8,"column":14,"nodeType":"500","messageId":"501","endLine":8,"endColumn":17,"suggestions":"612"},{"ruleId":"498","severity":1,"message":"499","line":9,"column":11,"nodeType":"500","messageId":"501","endLine":9,"endColumn":14,"suggestions":"613"},{"ruleId":"498","severity":1,"message":"499","line":5,"column":11,"nodeType":"500","messageId":"501","endLine":5,"endColumn":14,"suggestions":"614"},{"ruleId":"498","severity":1,"message":"499","line":11,"column":41,"nodeType":"500","messageId":"501","endLine":11,"endColumn":44,"suggestions":"615"},{"ruleId":"498","severity":1,"message":"499","line":11,"column":67,"nodeType":"500","messageId":"501","endLine":11,"endColumn":70,"suggestions":"616"},{"ruleId":"506","severity":1,"message":"596","line":22,"column":51,"nodeType":"504","messageId":"508","endLine":22,"endColumn":60},{"ruleId":"498","severity":1,"message":"499","line":3,"column":66,"nodeType":"500","messageId":"501","endLine":3,"endColumn":69,"suggestions":"617"},{"ruleId":"498","severity":1,"message":"499","line":4,"column":25,"nodeType":"500","messageId":"501","endLine":4,"endColumn":28,"suggestions":"618"},{"ruleId":"506","severity":1,"message":"619","line":9,"column":11,"nodeType":"504","messageId":"508","endLine":9,"endColumn":26},{"ruleId":"493","severity":1,"message":"494","line":13,"column":1,"nodeType":"497","messageId":"496","endLine":13,"endColumn":26},{"ruleId":"493","severity":1,"message":"494","line":11,"column":18,"nodeType":"495","messageId":"496","endLine":11,"endColumn":32},{"ruleId":"493","severity":1,"message":"620","line":11,"column":19,"nodeType":"504","messageId":"505","endLine":11,"endColumn":28},{"ruleId":"498","severity":1,"message":"499","line":11,"column":25,"nodeType":"500","messageId":"501","endLine":11,"endColumn":28,"suggestions":"621"},{"ruleId":"493","severity":1,"message":"494","line":1,"column":16,"nodeType":"497","messageId":"496","endLine":1,"endColumn":44},{"ruleId":"498","severity":1,"message":"499","line":2,"column":38,"nodeType":"500","messageId":"501","endLine":2,"endColumn":41,"suggestions":"622"},{"ruleId":"498","severity":1,"message":"499","line":2,"column":64,"nodeType":"500","messageId":"501","endLine":2,"endColumn":67,"suggestions":"623"},{"ruleId":"493","severity":1,"message":"494","line":6,"column":16,"nodeType":"497","messageId":"496","endLine":6,"endColumn":35},{"ruleId":"506","severity":1,"message":"525","line":1,"column":8,"nodeType":"504","messageId":"508","endLine":1,"endColumn":13},{"ruleId":"493","severity":1,"message":"494","line":7,"column":1,"nodeType":"497","messageId":"496","endLine":7,"endColumn":23},{"ruleId":"506","severity":1,"message":"525","line":1,"column":8,"nodeType":"504","messageId":"508","endLine":1,"endColumn":13},{"ruleId":"493","severity":1,"message":"494","line":6,"column":16,"nodeType":"497","messageId":"496","endLine":6,"endColumn":37},{"ruleId":"506","severity":1,"message":"624","line":7,"column":18,"nodeType":"504","messageId":"508","endLine":7,"endColumn":25},{"ruleId":"506","severity":1,"message":"625","line":7,"column":27,"nodeType":"504","messageId":"508","endLine":7,"endColumn":32},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionDeclaration","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["626","627"],"Argument 'store' should be typed with a non-any type.","Identifier","anyTypedArg","@typescript-eslint/no-unused-vars","'store' is defined but never used.","unusedVar",["628","629"],"Argument 'next' should be typed with a non-any type.",["630","631"],"Argument 'action' should be typed with a non-any type.",["632","633"],"Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed",["634","635"],["636","637"],["638","639"],"'canonical' is assigned a value but never used.","FunctionExpression","Argument 'data' should be typed with a non-any type.",["640","641"],["642","643"],"'React' is defined but never used.",["644","645"],["646","647"],["648","649"],["650","651"],"'tabletLeftWidth' is assigned a value but never used.","'IEntryContainerComp' is defined but never used.",["652","653"],["654","655"],["656","657"],["658","659"],["660","661"],["662","663"],["664","665"],["666","667"],["668","669"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onGetGaCount'. Either include it or remove the dependency array.","ArrayExpression",["670"],["671","672"],"Argument 'dispatch' should be typed with a non-any type.",["673","674"],"Argument 'getState' should be typed with a non-any type.","'getState' is defined but never used.",["675","676"],"Argument 'payload' should be typed with a non-any type.",["677","678"],["679","680"],["681","682"],"React Hook useEffect has a missing dependency: 'onSetLogin'. Either include it or remove the dependency array.",["683"],["684","685"],"Argument 'cb' should be typed with a non-any type.",["686","687"],["688","689"],["690","691"],["692","693"],["694","695"],["696","697"],["698","699"],["700","701"],["702","703"],"Argument 'resolve' should be typed with a non-any type.",["704","705"],["706","707"],["708","709"],["710","711"],["712","713"],"'content' is defined but never used.",["714","715"],"'delta' is defined but never used.",["716","717"],"'source' is defined but never used.",["718","719"],"'editor' is defined but never used.",["720","721"],["722","723"],["724","725"],["726","727"],["728","729"],["730","731"],["732","733"],"React Hook useEffect has a missing dependency: 'getComment'. Either include it or remove the dependency array.",["734"],["735","736"],["737","738"],["739","740"],["741","742"],["743","744"],["745","746"],"'i' is defined but never used.",["747","748"],["749","750"],["751","752"],["753","754"],"'parent' is defined but never used.",["755","756"],"'csrf' is defined but never used.",["757","758"],["759","760"],["761","762"],"React Hook useEffect has missing dependencies: 'getPosts' and 'onClearPost'. Either include them or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["763"],["764","765"],["766","767"],["768","769"],["770","771"],["772","773"],["774","775"],["776","777"],["778","779"],["780","781"],["782","783"],"'IAboutContainer' is defined but never used.","Argument 'text' should be typed with a non-any type.",["784","785"],["786","787"],["788","789"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.",{"messageId":"790","fix":"791","desc":"792"},{"messageId":"793","fix":"794","desc":"795"},{"messageId":"790","fix":"796","desc":"792"},{"messageId":"793","fix":"797","desc":"795"},{"messageId":"790","fix":"798","desc":"792"},{"messageId":"793","fix":"799","desc":"795"},{"messageId":"790","fix":"800","desc":"792"},{"messageId":"793","fix":"801","desc":"795"},{"messageId":"790","fix":"802","desc":"792"},{"messageId":"793","fix":"803","desc":"795"},{"messageId":"790","fix":"804","desc":"792"},{"messageId":"793","fix":"805","desc":"795"},{"messageId":"790","fix":"806","desc":"792"},{"messageId":"793","fix":"807","desc":"795"},{"messageId":"790","fix":"808","desc":"792"},{"messageId":"793","fix":"809","desc":"795"},{"messageId":"790","fix":"810","desc":"792"},{"messageId":"793","fix":"811","desc":"795"},{"messageId":"790","fix":"812","desc":"792"},{"messageId":"793","fix":"813","desc":"795"},{"messageId":"790","fix":"814","desc":"792"},{"messageId":"793","fix":"815","desc":"795"},{"messageId":"790","fix":"816","desc":"792"},{"messageId":"793","fix":"817","desc":"795"},{"messageId":"790","fix":"818","desc":"792"},{"messageId":"793","fix":"819","desc":"795"},{"messageId":"790","fix":"820","desc":"792"},{"messageId":"793","fix":"821","desc":"795"},{"messageId":"790","fix":"822","desc":"792"},{"messageId":"793","fix":"823","desc":"795"},{"messageId":"790","fix":"824","desc":"792"},{"messageId":"793","fix":"825","desc":"795"},{"messageId":"790","fix":"826","desc":"792"},{"messageId":"793","fix":"827","desc":"795"},{"messageId":"790","fix":"828","desc":"792"},{"messageId":"793","fix":"829","desc":"795"},{"messageId":"790","fix":"830","desc":"792"},{"messageId":"793","fix":"831","desc":"795"},{"messageId":"790","fix":"832","desc":"792"},{"messageId":"793","fix":"833","desc":"795"},{"messageId":"790","fix":"834","desc":"792"},{"messageId":"793","fix":"835","desc":"795"},{"messageId":"790","fix":"836","desc":"792"},{"messageId":"793","fix":"837","desc":"795"},{"desc":"838","fix":"839"},{"messageId":"790","fix":"840","desc":"792"},{"messageId":"793","fix":"841","desc":"795"},{"messageId":"790","fix":"842","desc":"792"},{"messageId":"793","fix":"843","desc":"795"},{"messageId":"790","fix":"844","desc":"792"},{"messageId":"793","fix":"845","desc":"795"},{"messageId":"790","fix":"846","desc":"792"},{"messageId":"793","fix":"847","desc":"795"},{"messageId":"790","fix":"848","desc":"792"},{"messageId":"793","fix":"849","desc":"795"},{"messageId":"790","fix":"850","desc":"792"},{"messageId":"793","fix":"851","desc":"795"},{"desc":"852","fix":"853"},{"messageId":"790","fix":"854","desc":"792"},{"messageId":"793","fix":"855","desc":"795"},{"messageId":"790","fix":"856","desc":"792"},{"messageId":"793","fix":"857","desc":"795"},{"messageId":"790","fix":"858","desc":"792"},{"messageId":"793","fix":"859","desc":"795"},{"messageId":"790","fix":"860","desc":"792"},{"messageId":"793","fix":"861","desc":"795"},{"messageId":"790","fix":"862","desc":"792"},{"messageId":"793","fix":"863","desc":"795"},{"messageId":"790","fix":"864","desc":"792"},{"messageId":"793","fix":"865","desc":"795"},{"messageId":"790","fix":"866","desc":"792"},{"messageId":"793","fix":"867","desc":"795"},{"messageId":"790","fix":"868","desc":"792"},{"messageId":"793","fix":"869","desc":"795"},{"messageId":"790","fix":"870","desc":"792"},{"messageId":"793","fix":"871","desc":"795"},{"messageId":"790","fix":"872","desc":"792"},{"messageId":"793","fix":"873","desc":"795"},{"messageId":"790","fix":"874","desc":"792"},{"messageId":"793","fix":"875","desc":"795"},{"messageId":"790","fix":"876","desc":"792"},{"messageId":"793","fix":"877","desc":"795"},{"messageId":"790","fix":"878","desc":"792"},{"messageId":"793","fix":"879","desc":"795"},{"messageId":"790","fix":"880","desc":"792"},{"messageId":"793","fix":"881","desc":"795"},{"messageId":"790","fix":"882","desc":"792"},{"messageId":"793","fix":"883","desc":"795"},{"messageId":"790","fix":"884","desc":"792"},{"messageId":"793","fix":"885","desc":"795"},{"messageId":"790","fix":"886","desc":"792"},{"messageId":"793","fix":"887","desc":"795"},{"messageId":"790","fix":"888","desc":"792"},{"messageId":"793","fix":"889","desc":"795"},{"messageId":"790","fix":"890","desc":"792"},{"messageId":"793","fix":"891","desc":"795"},{"messageId":"790","fix":"892","desc":"792"},{"messageId":"793","fix":"893","desc":"795"},{"messageId":"790","fix":"894","desc":"792"},{"messageId":"793","fix":"895","desc":"795"},{"messageId":"790","fix":"896","desc":"792"},{"messageId":"793","fix":"897","desc":"795"},{"messageId":"790","fix":"898","desc":"792"},{"messageId":"793","fix":"899","desc":"795"},{"messageId":"790","fix":"900","desc":"792"},{"messageId":"793","fix":"901","desc":"795"},{"messageId":"790","fix":"902","desc":"792"},{"messageId":"793","fix":"903","desc":"795"},{"desc":"904","fix":"905"},{"messageId":"790","fix":"906","desc":"792"},{"messageId":"793","fix":"907","desc":"795"},{"messageId":"790","fix":"908","desc":"792"},{"messageId":"793","fix":"909","desc":"795"},{"messageId":"790","fix":"910","desc":"792"},{"messageId":"793","fix":"911","desc":"795"},{"messageId":"790","fix":"912","desc":"792"},{"messageId":"793","fix":"913","desc":"795"},{"messageId":"790","fix":"914","desc":"792"},{"messageId":"793","fix":"915","desc":"795"},{"messageId":"790","fix":"916","desc":"792"},{"messageId":"793","fix":"917","desc":"795"},{"messageId":"790","fix":"918","desc":"792"},{"messageId":"793","fix":"919","desc":"795"},{"messageId":"790","fix":"920","desc":"792"},{"messageId":"793","fix":"921","desc":"795"},{"messageId":"790","fix":"922","desc":"792"},{"messageId":"793","fix":"923","desc":"795"},{"messageId":"790","fix":"924","desc":"792"},{"messageId":"793","fix":"925","desc":"795"},{"messageId":"790","fix":"926","desc":"792"},{"messageId":"793","fix":"927","desc":"795"},{"messageId":"790","fix":"928","desc":"792"},{"messageId":"793","fix":"929","desc":"795"},{"messageId":"790","fix":"930","desc":"792"},{"messageId":"793","fix":"931","desc":"795"},{"messageId":"790","fix":"932","desc":"792"},{"messageId":"793","fix":"933","desc":"795"},{"desc":"934","fix":"935"},{"messageId":"790","fix":"936","desc":"792"},{"messageId":"793","fix":"937","desc":"795"},{"messageId":"790","fix":"938","desc":"792"},{"messageId":"793","fix":"939","desc":"795"},{"messageId":"790","fix":"940","desc":"792"},{"messageId":"793","fix":"941","desc":"795"},{"messageId":"790","fix":"942","desc":"792"},{"messageId":"793","fix":"943","desc":"795"},{"messageId":"790","fix":"944","desc":"792"},{"messageId":"793","fix":"945","desc":"795"},{"messageId":"790","fix":"946","desc":"792"},{"messageId":"793","fix":"947","desc":"795"},{"messageId":"790","fix":"948","desc":"792"},{"messageId":"793","fix":"949","desc":"795"},{"messageId":"790","fix":"950","desc":"792"},{"messageId":"793","fix":"951","desc":"795"},{"messageId":"790","fix":"952","desc":"792"},{"messageId":"793","fix":"953","desc":"795"},{"messageId":"790","fix":"954","desc":"792"},{"messageId":"793","fix":"955","desc":"795"},{"messageId":"790","fix":"956","desc":"792"},{"messageId":"793","fix":"957","desc":"795"},{"messageId":"790","fix":"958","desc":"792"},{"messageId":"793","fix":"959","desc":"795"},{"messageId":"790","fix":"960","desc":"792"},{"messageId":"793","fix":"961","desc":"795"},"suggestUnknown",{"range":"962","text":"963"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"962","text":"964"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"965","text":"963"},{"range":"965","text":"964"},{"range":"966","text":"963"},{"range":"966","text":"964"},{"range":"967","text":"963"},{"range":"967","text":"964"},{"range":"968","text":"963"},{"range":"968","text":"964"},{"range":"969","text":"963"},{"range":"969","text":"964"},{"range":"970","text":"963"},{"range":"970","text":"964"},{"range":"971","text":"963"},{"range":"971","text":"964"},{"range":"972","text":"963"},{"range":"972","text":"964"},{"range":"973","text":"963"},{"range":"973","text":"964"},{"range":"974","text":"963"},{"range":"974","text":"964"},{"range":"975","text":"963"},{"range":"975","text":"964"},{"range":"976","text":"963"},{"range":"976","text":"964"},{"range":"977","text":"963"},{"range":"977","text":"964"},{"range":"978","text":"963"},{"range":"978","text":"964"},{"range":"979","text":"963"},{"range":"979","text":"964"},{"range":"980","text":"963"},{"range":"980","text":"964"},{"range":"981","text":"963"},{"range":"981","text":"964"},{"range":"982","text":"963"},{"range":"982","text":"964"},{"range":"983","text":"963"},{"range":"983","text":"964"},{"range":"984","text":"963"},{"range":"984","text":"964"},{"range":"985","text":"963"},{"range":"985","text":"964"},"Update the dependencies array to be: [onGetGaCount]",{"range":"986","text":"987"},{"range":"988","text":"963"},{"range":"988","text":"964"},{"range":"989","text":"963"},{"range":"989","text":"964"},{"range":"990","text":"963"},{"range":"990","text":"964"},{"range":"991","text":"963"},{"range":"991","text":"964"},{"range":"992","text":"963"},{"range":"992","text":"964"},{"range":"993","text":"963"},{"range":"993","text":"964"},"Update the dependencies array to be: [onSetLogin]",{"range":"994","text":"995"},{"range":"996","text":"963"},{"range":"996","text":"964"},{"range":"997","text":"963"},{"range":"997","text":"964"},{"range":"998","text":"963"},{"range":"998","text":"964"},{"range":"999","text":"963"},{"range":"999","text":"964"},{"range":"1000","text":"963"},{"range":"1000","text":"964"},{"range":"1001","text":"963"},{"range":"1001","text":"964"},{"range":"1002","text":"963"},{"range":"1002","text":"964"},{"range":"1003","text":"963"},{"range":"1003","text":"964"},{"range":"1004","text":"963"},{"range":"1004","text":"964"},{"range":"1005","text":"963"},{"range":"1005","text":"964"},{"range":"1006","text":"963"},{"range":"1006","text":"964"},{"range":"1007","text":"963"},{"range":"1007","text":"964"},{"range":"1008","text":"963"},{"range":"1008","text":"964"},{"range":"1009","text":"963"},{"range":"1009","text":"964"},{"range":"1010","text":"963"},{"range":"1010","text":"964"},{"range":"1011","text":"963"},{"range":"1011","text":"964"},{"range":"1012","text":"963"},{"range":"1012","text":"964"},{"range":"1013","text":"963"},{"range":"1013","text":"964"},{"range":"1014","text":"963"},{"range":"1014","text":"964"},{"range":"1015","text":"963"},{"range":"1015","text":"964"},{"range":"1016","text":"963"},{"range":"1016","text":"964"},{"range":"1017","text":"963"},{"range":"1017","text":"964"},{"range":"1018","text":"963"},{"range":"1018","text":"964"},{"range":"1019","text":"963"},{"range":"1019","text":"964"},{"range":"1020","text":"963"},{"range":"1020","text":"964"},"Update the dependencies array to be: [getComment, postid]",{"range":"1021","text":"1022"},{"range":"1023","text":"963"},{"range":"1023","text":"964"},{"range":"1024","text":"963"},{"range":"1024","text":"964"},{"range":"1025","text":"963"},{"range":"1025","text":"964"},{"range":"1026","text":"963"},{"range":"1026","text":"964"},{"range":"1027","text":"963"},{"range":"1027","text":"964"},{"range":"1028","text":"963"},{"range":"1028","text":"964"},{"range":"1029","text":"963"},{"range":"1029","text":"964"},{"range":"1030","text":"963"},{"range":"1030","text":"964"},{"range":"1031","text":"963"},{"range":"1031","text":"964"},{"range":"1032","text":"963"},{"range":"1032","text":"964"},{"range":"1033","text":"963"},{"range":"1033","text":"964"},{"range":"1034","text":"963"},{"range":"1034","text":"964"},{"range":"1035","text":"963"},{"range":"1035","text":"964"},{"range":"1036","text":"963"},{"range":"1036","text":"964"},"Update the dependencies array to be: [getPosts, onClearPost, params]",{"range":"1037","text":"1038"},{"range":"1039","text":"963"},{"range":"1039","text":"964"},{"range":"1040","text":"963"},{"range":"1040","text":"964"},{"range":"1041","text":"963"},{"range":"1041","text":"964"},{"range":"1042","text":"963"},{"range":"1042","text":"964"},{"range":"1043","text":"963"},{"range":"1043","text":"964"},{"range":"1044","text":"963"},{"range":"1044","text":"964"},{"range":"1045","text":"963"},{"range":"1045","text":"964"},{"range":"1046","text":"963"},{"range":"1046","text":"964"},{"range":"1047","text":"963"},{"range":"1047","text":"964"},{"range":"1048","text":"963"},{"range":"1048","text":"964"},{"range":"1049","text":"963"},{"range":"1049","text":"964"},{"range":"1050","text":"963"},{"range":"1050","text":"964"},{"range":"1051","text":"963"},{"range":"1051","text":"964"},[570,573],"unknown","never",[32,35],[47,50],[64,67],[206,209],[82,85],[150,153],[773,776],[3759,3762],[326,329],[338,341],[383,386],[436,439],[7875,7878],[21470,21473],[137,140],[328,331],[340,343],[376,379],[150,153],[101,104],[679,682],[1581,1583],"[onGetGaCount]",[362,365],[543,546],[558,561],[671,674],[979,982],[710,713],[368,370],"[onSetLogin]",[407,410],[637,640],[774,777],[1562,1565],[472,475],[738,741],[1019,1022],[167,170],[202,205],[372,375],[514,517],[549,552],[998,1001],[1146,1149],[2239,2242],[3659,3662],[3671,3674],[3684,3687],[3697,3700],[365,368],[213,216],[242,245],[296,299],[817,820],[1457,1460],[906,914],"[getComment, postid]",[1235,1238],[527,530],[584,587],[1127,1130],[1509,1512],[1711,1714],[2464,2467],[2853,2856],[3489,3492],[4052,4055],[4859,4862],[588,591],[648,651],[665,668],[939,947],"[getPosts, onClearPost, params]",[408,411],[223,226],[235,238],[295,298],[309,312],[156,159],[311,314],[337,340],[93,96],[144,147],[285,288],[83,86],[109,112]]